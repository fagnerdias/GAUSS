


%%

"elseif" 					printf("ELSE_IF\n");
"if"  						printf("IF\n");
"then"						printf("THEN\n");
"else"						printf("ELSE\n");
"endif"						printf("END_IF\n");
"for"						printf("FOR\n");
"endfor"					printf("END_FOR\n");
"while"						printf("WHILE\n");
"endwhile"					printf("END_WHILE\n");
"switch"					printf("SWITCH\n");
"case"						printf("CASE\n");
"default"					printf("DEFAULT\n");
"endswitch"					printf("END_SWITCH\n");
"break"						printf("BREAK\n");
"return"					printf("RETURN\n");
"func"						printf("FUNC\n");
"is"						printf("IS_RETURN_FUNC\n");
"end'nome da função'"		printf("END_FUNC\n");
"int"						printf("INT\n");
"float"						printf("FLOAT\n");
"char"						printf("CHAR\n");
"string"					printf("STRING\n");
"struct"					printf("STRUCT\n")	;
"endstruct"					printf("END_STRUCT\n");
"++"						printf("DOUBLE_PLUS\n");
"+"     					printf("PLUS\n");
"-"     					printf("MINUS\n");
"--"						printf("DOUBLE_MINUS\n");
"*"     					printf("TIMES\n");
"%"							printf("MOD\n");
"/"     					printf("DIVIDE\n");
"^"     					printf("POWER\n");
"("     					printf("LEFT_PARENTHESIS\n");
")"     					printf("RIGHT_PARENTHESIS\n");
"!="						printf("NOT_EQUAL_THAT\n");
"!"							printf("NOT_LOGIC\n");
"&&"						printf("AND_LOGIC\n");
"||"						printf("OR_LOGIC\n");
"&"							printf("AND\n");
"|"							printf("OR")
"=="						printf("EQUAL_LOGIC\n");
"<="						printf("LESS_EQ_THAT\n");
">="						printf("BIGGER_EQ_THAT\n");
"<"							printf("LESS_THAT\n");
">"							printf("BIGGER_THAT\n");
";"     					printf("END\n");

%%