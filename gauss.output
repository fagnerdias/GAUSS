Terminals unused in grammar

   CHAVE_ESQUERDA
   CHAVE_DIREITA
   PONTO
   DOIS_PONTOS
   E_LOGICO
   E_LOGICO_CURTO_CIRCUITO
   OU_LOGICO
   OU_LOGICO_CURTO_CIRCUITO
   EXCLAMACAO
   ASTERISCO
   PRINT_INT
   PRINT_FLOAT
   PRINT_CHAR
   PRINT_STRING
   OPERADOR_TERNARIO
   FOR
   END_FOR
   DO
   SWITCH
   END_SWITCH
   CASE
   END_CASE
   DEFAULT
   ELSEIF
   STRUCT
   PROC
   CONSTANTE
   PRINTF
   SCANF
   TRUE
   FALSE
   JUMP
   BREAK
   TNULL
   LITERAL_QUALQUER


Grammar

    0 $accept: prog $end

    1 prog: subprog stmts

    2 subprog: funcao
    3        | subprog funcao

    4 stmts: stmt PONTO_E_VIRGULA
    5      | stmt PONTO_E_VIRGULA stmts

    6 decl: type vars
    7     | type vars decl

    8 stmt: decl
    9     | if_stmt
   10     | while_stmt
   11     | atribuicoes

   12 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

   13 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE

   14 elses_opcoes: /* empty */
   15             | else
   16             | elseif

   17 else: ELSE THEN stmts

   18 elseif: ELSE if_stmt

   19 atribuicoes: atribuicao_simples
   20            | atribuicao_unaria
   21            | atribuicao_composta
   22            | atribuicao_paralela

   23 atribuicao_simples: ID ATRIBUICAO id

   24 atribuicao_unaria: ID operador_unario
   25                  | operador_unario ID

   26 atribuicao_composta: ID operador_composto valor

   27 atribuicao_paralela: vars ATRIBUICAO exprecoes_list

   28 operador_unario: INCREMENTO
   29                | DECREMENTO

   30 operador: MAIS
   31         | MENOS_UNARIO
   32         | EXPONENCIACAO
   33         | BARRA
   34         | MODULO

   35 operador_comp: MENOR_QUE
   36              | MAIOR_QUE
   37              | MENOR_OU_IGUAL_A
   38              | MAIOR_OU_IGUAL_A
   39              | IGUAL_A
   40              | DIFERENTE_DE

   41 operador_composto: MAIS_IGUAL
   42                  | MENOS_IGUAL
   43                  | VEZES_IGUAL
   44                  | DIV_IGUAL
   45                  | EXPONENCIACAO_IGUAL

   46 type: CARACTERE
   47     | STRING
   48     | INTEIRO
   49     | FLOAT
   50     | DOUBLE
   51     | VOID
   52     | BOOLEANO

   53 valor: id

   54 exprecoes: /* empty */
   55          | id
   56          | id operador id
   57          | id operador_comp id

   58 exprecoes_list: exprecoes VIRGULA exprecoes

   59 vars: ID VIRGULA ID
   60     | ID VIRGULA vars

   61 args: type ID
   62     | type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   63     | type ID VIRGULA args

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

   65 id: ID
   66   | DIGITO
   67   | ID COLCHETE_ESQUERDA exprecoes COLCHETE_DIREITA
   68   | PARENTESE_ESQUERDA exprecoes PARENTESE_DIREITA


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAVE_ESQUERDA (258)
CHAVE_DIREITA (259)
PARENTESE_ESQUERDA (260) 12 13 64 68
PARENTESE_DIREITA (261) 12 13 64 68
COLCHETE_ESQUERDA (262) 62 67
COLCHETE_DIREITA (263) 62 67
PONTO_E_VIRGULA (264) 4 5
VIRGULA (265) 58 59 60 62 63
PONTO (266)
DOIS_PONTOS (267)
E_LOGICO (268)
E_LOGICO_CURTO_CIRCUITO (269)
OU_LOGICO (270)
OU_LOGICO_CURTO_CIRCUITO (271)
EXCLAMACAO (272)
ASTERISCO (273)
PRINT_INT (274)
PRINT_FLOAT (275)
PRINT_CHAR (276)
PRINT_STRING (277)
MODULO (278) 34
BARRA (279) 33
INCREMENTO (280) 28
DECREMENTO (281) 29
MAIS (282) 30
MENOS_UNARIO (283) 31
EXPONENCIACAO (284) 32
ATRIBUICAO (285) 23 27
OPERADOR_TERNARIO (286)
MENOR_QUE (287) 35
MAIOR_QUE (288) 36
MENOR_OU_IGUAL_A (289) 37
MAIOR_OU_IGUAL_A (290) 38
IGUAL_A (291) 39
DIFERENTE_DE (292) 40
MAIS_IGUAL (293) 41
MENOS_IGUAL (294) 42
VEZES_IGUAL (295) 43
DIV_IGUAL (296) 44
EXPONENCIACAO_IGUAL (297) 45
FOR (298)
END_FOR (299)
DO (300)
WHILE (301) 13
END_WHILE (302) 13
SWITCH (303)
END_SWITCH (304)
CASE (305)
END_CASE (306)
DEFAULT (307)
IF (308) 12
END_IF (309) 12
ELSE (310) 17 18
ELSEIF (311)
THEN (312) 12 17
STRUCT (313)
IS (314) 64
END (315) 64
FUNCAO (316) 64
PROC (317)
RETURN (318) 64
TBEGIN (319) 64
CONSTANTE (320)
PRINTF (321)
SCANF (322)
CARACTERE (323) 46
STRING (324) 47
INTEIRO (325) 48
FLOAT (326) 49
DOUBLE (327) 50
VOID (328) 51
BOOLEANO (329) 52
TRUE (330)
FALSE (331)
JUMP (332)
BREAK (333)
TNULL (334)
DIGITO (335) 66
ID (336) 23 24 25 26 59 60 61 62 63 64 65 67
LITERAL_QUALQUER (337)


Nonterminals, with rules where they appear

$accept (83)
    on left: 0
prog (84)
    on left: 1, on right: 0
subprog (85)
    on left: 2 3, on right: 1 3
stmts (86)
    on left: 4 5, on right: 1 5 12 13 17 64
decl (87)
    on left: 6 7, on right: 7 8
stmt (88)
    on left: 8 9 10 11, on right: 4 5
if_stmt (89)
    on left: 12, on right: 9 18
while_stmt (90)
    on left: 13, on right: 10
elses_opcoes (91)
    on left: 14 15 16, on right: 12
else (92)
    on left: 17, on right: 15
elseif (93)
    on left: 18, on right: 16
atribuicoes (94)
    on left: 19 20 21 22, on right: 11
atribuicao_simples (95)
    on left: 23, on right: 19
atribuicao_unaria (96)
    on left: 24 25, on right: 20
atribuicao_composta (97)
    on left: 26, on right: 21
atribuicao_paralela (98)
    on left: 27, on right: 22
operador_unario (99)
    on left: 28 29, on right: 24 25
operador (100)
    on left: 30 31 32 33 34, on right: 56
operador_comp (101)
    on left: 35 36 37 38 39 40, on right: 57
operador_composto (102)
    on left: 41 42 43 44 45, on right: 26
type (103)
    on left: 46 47 48 49 50 51 52, on right: 6 7 61 62 63 64
valor (104)
    on left: 53, on right: 12 13 26
exprecoes (105)
    on left: 54 55 56 57, on right: 58 67 68
exprecoes_list (106)
    on left: 58, on right: 27
vars (107)
    on left: 59 60, on right: 6 7 27 60
args (108)
    on left: 61 62 63, on right: 62 63 64
funcao (109)
    on left: 64, on right: 2 3
id (110)
    on left: 65 66 67 68, on right: 23 53 55 56 57


state 0

    0 $accept: . prog $end

    FUNCAO  shift, and go to state 1

    prog     go to state 2
    subprog  go to state 3
    funcao   go to state 4


state 1

   64 funcao: FUNCAO . ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    ID  shift, and go to state 5


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 6


state 3

    1 prog: subprog . stmts
    3 subprog: subprog . funcao

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    FUNCAO      shift, and go to state 1
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 19
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31
    funcao               go to state 32


state 4

    2 subprog: funcao .

    $default  reduce using rule 2 (subprog)


state 5

   64 funcao: FUNCAO ID . PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    PARENTESE_ESQUERDA  shift, and go to state 33


state 6

    0 $accept: prog $end .

    $default  accept


state 7

   28 operador_unario: INCREMENTO .

    $default  reduce using rule 28 (operador_unario)


state 8

   29 operador_unario: DECREMENTO .

    $default  reduce using rule 29 (operador_unario)


state 9

   13 while_stmt: WHILE . PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 34


state 10

   12 if_stmt: IF . PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 35


state 11

   46 type: CARACTERE .

    $default  reduce using rule 46 (type)


state 12

   47 type: STRING .

    $default  reduce using rule 47 (type)


state 13

   48 type: INTEIRO .

    $default  reduce using rule 48 (type)


state 14

   49 type: FLOAT .

    $default  reduce using rule 49 (type)


state 15

   50 type: DOUBLE .

    $default  reduce using rule 50 (type)


state 16

   51 type: VOID .

    $default  reduce using rule 51 (type)


state 17

   52 type: BOOLEANO .

    $default  reduce using rule 52 (type)


state 18

   23 atribuicao_simples: ID . ATRIBUICAO id
   24 atribuicao_unaria: ID . operador_unario
   26 atribuicao_composta: ID . operador_composto valor
   59 vars: ID . VIRGULA ID
   60     | ID . VIRGULA vars

    VIRGULA              shift, and go to state 36
    INCREMENTO           shift, and go to state 7
    DECREMENTO           shift, and go to state 8
    ATRIBUICAO           shift, and go to state 37
    MAIS_IGUAL           shift, and go to state 38
    MENOS_IGUAL          shift, and go to state 39
    VEZES_IGUAL          shift, and go to state 40
    DIV_IGUAL            shift, and go to state 41
    EXPONENCIACAO_IGUAL  shift, and go to state 42

    operador_unario    go to state 43
    operador_composto  go to state 44


state 19

    1 prog: subprog stmts .

    $default  reduce using rule 1 (prog)


state 20

    8 stmt: decl .

    $default  reduce using rule 8 (stmt)


state 21

    4 stmts: stmt . PONTO_E_VIRGULA
    5      | stmt . PONTO_E_VIRGULA stmts

    PONTO_E_VIRGULA  shift, and go to state 45


state 22

    9 stmt: if_stmt .

    $default  reduce using rule 9 (stmt)


state 23

   10 stmt: while_stmt .

    $default  reduce using rule 10 (stmt)


state 24

   11 stmt: atribuicoes .

    $default  reduce using rule 11 (stmt)


state 25

   19 atribuicoes: atribuicao_simples .

    $default  reduce using rule 19 (atribuicoes)


state 26

   20 atribuicoes: atribuicao_unaria .

    $default  reduce using rule 20 (atribuicoes)


state 27

   21 atribuicoes: atribuicao_composta .

    $default  reduce using rule 21 (atribuicoes)


state 28

   22 atribuicoes: atribuicao_paralela .

    $default  reduce using rule 22 (atribuicoes)


state 29

   25 atribuicao_unaria: operador_unario . ID

    ID  shift, and go to state 46


state 30

    6 decl: type . vars
    7     | type . vars decl

    ID  shift, and go to state 47

    vars  go to state 48


state 31

   27 atribuicao_paralela: vars . ATRIBUICAO exprecoes_list

    ATRIBUICAO  shift, and go to state 49


state 32

    3 subprog: subprog funcao .

    $default  reduce using rule 3 (subprog)


state 33

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA . args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 50
    args  go to state 51


state 34

   13 while_stmt: WHILE PARENTESE_ESQUERDA . valor PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    valor  go to state 55
    id     go to state 56


state 35

   12 if_stmt: IF PARENTESE_ESQUERDA . valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    valor  go to state 57
    id     go to state 56


state 36

   59 vars: ID VIRGULA . ID
   60     | ID VIRGULA . vars

    ID  shift, and go to state 58

    vars  go to state 59


state 37

   23 atribuicao_simples: ID ATRIBUICAO . id

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    id  go to state 60


state 38

   41 operador_composto: MAIS_IGUAL .

    $default  reduce using rule 41 (operador_composto)


state 39

   42 operador_composto: MENOS_IGUAL .

    $default  reduce using rule 42 (operador_composto)


state 40

   43 operador_composto: VEZES_IGUAL .

    $default  reduce using rule 43 (operador_composto)


state 41

   44 operador_composto: DIV_IGUAL .

    $default  reduce using rule 44 (operador_composto)


state 42

   45 operador_composto: EXPONENCIACAO_IGUAL .

    $default  reduce using rule 45 (operador_composto)


state 43

   24 atribuicao_unaria: ID operador_unario .

    $default  reduce using rule 24 (atribuicao_unaria)


state 44

   26 atribuicao_composta: ID operador_composto . valor

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    valor  go to state 61
    id     go to state 56


state 45

    4 stmts: stmt PONTO_E_VIRGULA .
    5      | stmt PONTO_E_VIRGULA . stmts

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    $default  reduce using rule 4 (stmts)

    stmts                go to state 62
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 46

   25 atribuicao_unaria: operador_unario ID .

    $default  reduce using rule 25 (atribuicao_unaria)


state 47

   59 vars: ID . VIRGULA ID
   60     | ID . VIRGULA vars

    VIRGULA  shift, and go to state 36


state 48

    6 decl: type vars .
    7     | type vars . decl

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    $default  reduce using rule 6 (decl)

    decl  go to state 63
    type  go to state 30


state 49

   27 atribuicao_paralela: vars ATRIBUICAO . exprecoes_list

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    $default  reduce using rule 54 (exprecoes)

    exprecoes       go to state 64
    exprecoes_list  go to state 65
    id              go to state 66


state 50

   61 args: type . ID
   62     | type . ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   63     | type . ID VIRGULA args

    ID  shift, and go to state 67


state 51

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args . PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    PARENTESE_DIREITA  shift, and go to state 68


state 52

   68 id: PARENTESE_ESQUERDA . exprecoes PARENTESE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    $default  reduce using rule 54 (exprecoes)

    exprecoes  go to state 69
    id         go to state 66


state 53

   66 id: DIGITO .

    $default  reduce using rule 66 (id)


state 54

   65 id: ID .
   67   | ID . COLCHETE_ESQUERDA exprecoes COLCHETE_DIREITA

    COLCHETE_ESQUERDA  shift, and go to state 70

    $default  reduce using rule 65 (id)


state 55

   13 while_stmt: WHILE PARENTESE_ESQUERDA valor . PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_DIREITA  shift, and go to state 71


state 56

   53 valor: id .

    $default  reduce using rule 53 (valor)


state 57

   12 if_stmt: IF PARENTESE_ESQUERDA valor . PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_DIREITA  shift, and go to state 72


state 58

   59 vars: ID . VIRGULA ID
   59     | ID VIRGULA ID .
   60     | ID . VIRGULA vars

    VIRGULA  shift, and go to state 36

    $default  reduce using rule 59 (vars)


state 59

   60 vars: ID VIRGULA vars .

    $default  reduce using rule 60 (vars)


state 60

   23 atribuicao_simples: ID ATRIBUICAO id .

    $default  reduce using rule 23 (atribuicao_simples)


state 61

   26 atribuicao_composta: ID operador_composto valor .

    $default  reduce using rule 26 (atribuicao_composta)


state 62

    5 stmts: stmt PONTO_E_VIRGULA stmts .

    $default  reduce using rule 5 (stmts)


state 63

    7 decl: type vars decl .

    $default  reduce using rule 7 (decl)


state 64

   58 exprecoes_list: exprecoes . VIRGULA exprecoes

    VIRGULA  shift, and go to state 73


state 65

   27 atribuicao_paralela: vars ATRIBUICAO exprecoes_list .

    $default  reduce using rule 27 (atribuicao_paralela)


state 66

   55 exprecoes: id .
   56          | id . operador id
   57          | id . operador_comp id

    MODULO            shift, and go to state 74
    BARRA             shift, and go to state 75
    MAIS              shift, and go to state 76
    MENOS_UNARIO      shift, and go to state 77
    EXPONENCIACAO     shift, and go to state 78
    MENOR_QUE         shift, and go to state 79
    MAIOR_QUE         shift, and go to state 80
    MENOR_OU_IGUAL_A  shift, and go to state 81
    MAIOR_OU_IGUAL_A  shift, and go to state 82
    IGUAL_A           shift, and go to state 83
    DIFERENTE_DE      shift, and go to state 84

    $default  reduce using rule 55 (exprecoes)

    operador       go to state 85
    operador_comp  go to state 86


state 67

   61 args: type ID .
   62     | type ID . COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   63     | type ID . VIRGULA args

    COLCHETE_ESQUERDA  shift, and go to state 87
    VIRGULA            shift, and go to state 88

    $default  reduce using rule 61 (args)


state 68

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA . RETURN type IS TBEGIN stmts END

    RETURN  shift, and go to state 89


state 69

   68 id: PARENTESE_ESQUERDA exprecoes . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 90


state 70

   67 id: ID COLCHETE_ESQUERDA . exprecoes COLCHETE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    $default  reduce using rule 54 (exprecoes)

    exprecoes  go to state 91
    id         go to state 66


state 71

   13 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA . stmts END_WHILE

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 92
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 72

   12 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA . THEN stmts elses_opcoes END_IF

    THEN  shift, and go to state 93


state 73

   58 exprecoes_list: exprecoes VIRGULA . exprecoes

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    $default  reduce using rule 54 (exprecoes)

    exprecoes  go to state 94
    id         go to state 66


state 74

   34 operador: MODULO .

    $default  reduce using rule 34 (operador)


state 75

   33 operador: BARRA .

    $default  reduce using rule 33 (operador)


state 76

   30 operador: MAIS .

    $default  reduce using rule 30 (operador)


state 77

   31 operador: MENOS_UNARIO .

    $default  reduce using rule 31 (operador)


state 78

   32 operador: EXPONENCIACAO .

    $default  reduce using rule 32 (operador)


state 79

   35 operador_comp: MENOR_QUE .

    $default  reduce using rule 35 (operador_comp)


state 80

   36 operador_comp: MAIOR_QUE .

    $default  reduce using rule 36 (operador_comp)


state 81

   37 operador_comp: MENOR_OU_IGUAL_A .

    $default  reduce using rule 37 (operador_comp)


state 82

   38 operador_comp: MAIOR_OU_IGUAL_A .

    $default  reduce using rule 38 (operador_comp)


state 83

   39 operador_comp: IGUAL_A .

    $default  reduce using rule 39 (operador_comp)


state 84

   40 operador_comp: DIFERENTE_DE .

    $default  reduce using rule 40 (operador_comp)


state 85

   56 exprecoes: id operador . id

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    id  go to state 95


state 86

   57 exprecoes: id operador_comp . id

    PARENTESE_ESQUERDA  shift, and go to state 52
    DIGITO              shift, and go to state 53
    ID                  shift, and go to state 54

    id  go to state 96


state 87

   62 args: type ID COLCHETE_ESQUERDA . COLCHETE_DIREITA VIRGULA args

    COLCHETE_DIREITA  shift, and go to state 97


state 88

   63 args: type ID VIRGULA . args

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 50
    args  go to state 98


state 89

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN . type IS TBEGIN stmts END

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 99


state 90

   68 id: PARENTESE_ESQUERDA exprecoes PARENTESE_DIREITA .

    $default  reduce using rule 68 (id)


state 91

   67 id: ID COLCHETE_ESQUERDA exprecoes . COLCHETE_DIREITA

    COLCHETE_DIREITA  shift, and go to state 100


state 92

   13 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts . END_WHILE

    END_WHILE  shift, and go to state 101


state 93

   12 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN . stmts elses_opcoes END_IF

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 102
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 94

   58 exprecoes_list: exprecoes VIRGULA exprecoes .

    $default  reduce using rule 58 (exprecoes_list)


state 95

   56 exprecoes: id operador id .

    $default  reduce using rule 56 (exprecoes)


state 96

   57 exprecoes: id operador_comp id .

    $default  reduce using rule 57 (exprecoes)


state 97

   62 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA . VIRGULA args

    VIRGULA  shift, and go to state 103


state 98

   63 args: type ID VIRGULA args .

    $default  reduce using rule 63 (args)


state 99

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type . IS TBEGIN stmts END

    IS  shift, and go to state 104


state 100

   67 id: ID COLCHETE_ESQUERDA exprecoes COLCHETE_DIREITA .

    $default  reduce using rule 67 (id)


state 101

   13 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE .

    $default  reduce using rule 13 (while_stmt)


state 102

   12 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts . elses_opcoes END_IF

    ELSE  shift, and go to state 105

    $default  reduce using rule 14 (elses_opcoes)

    elses_opcoes  go to state 106
    else          go to state 107
    elseif        go to state 108


state 103

   62 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA . args

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 50
    args  go to state 109


state 104

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS . TBEGIN stmts END

    TBEGIN  shift, and go to state 110


state 105

   17 else: ELSE . THEN stmts
   18 elseif: ELSE . if_stmt

    IF    shift, and go to state 10
    THEN  shift, and go to state 111

    if_stmt  go to state 112


state 106

   12 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes . END_IF

    END_IF  shift, and go to state 113


state 107

   15 elses_opcoes: else .

    $default  reduce using rule 15 (elses_opcoes)


state 108

   16 elses_opcoes: elseif .

    $default  reduce using rule 16 (elses_opcoes)


state 109

   62 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args .

    $default  reduce using rule 62 (args)


state 110

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN . stmts END

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 114
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 111

   17 else: ELSE THEN . stmts

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 115
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 112

   18 elseif: ELSE if_stmt .

    $default  reduce using rule 18 (elseif)


state 113

   12 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF .

    $default  reduce using rule 12 (if_stmt)


state 114

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts . END

    END  shift, and go to state 116


state 115

   17 else: ELSE THEN stmts .

    $default  reduce using rule 17 (else)


state 116

   64 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END .

    $default  reduce using rule 64 (funcao)
