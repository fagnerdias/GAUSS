Terminals which are not used

   CHAVE_ESQUERDA
   CHAVE_DIREITA
   PONTO
   DOIS_PONTOS
   E_LOGICO_CURTO_CIRCUITO
   OU_LOGICO
   OU_LOGICO_CURTO_CIRCUITO
   EXCLAMACAO
   ASTERISCO
   PRINT_INT
   PRINT_FLOAT
   PRINT_CHAR
   PRINT_STRING
   OPERADOR_TERNARIO
   FOR
   END_FOR
   DO
   SWITCH
   END_SWITCH
   CASE
   END_CASE
   DEFAULT
   ELSEIF
   STRUCT
   PROC
   CONSTANTE
   PRINTF
   SCANF
   TRUE
   FALSE
   JUMP
   BREAK
   TNULL
   LITERAL_QUALQUER


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: subprog stmts

    2 subprog: funcao
    3        | subprog funcao

    4 stmts: stmt PONTO_E_VIRGULA
    5      | stmt PONTO_E_VIRGULA stmts

    6 decl: type ID
    7     | type vars
    8     | type vars decl

    9 stmt: decl
   10     | if_stmt
   11     | while_stmt
   12     | atribuicoes

   13 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

   14 while_stmt: WHILE PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA stmts END_WHILE

   15 elses_opcoes: /* empty */
   16             | else
   17             | elseif

   18 else: ELSE THEN stmts

   19 elseif: ELSE if_stmt

   20 atribuicoes: atribuicao_simples
   21            | atribuicao_unaria
   22            | atribuicao_composta
   23            | atribuicao_paralela

   24 atribuicao_simples: ID ATRIBUICAO id

   25 atribuicao_unaria: ID operador_unario
   26                  | operador_unario ID

   27 atribuicao_composta: ID operador_composto valor

   28 atribuicao_paralela: vars ATRIBUICAO exprecoes_list

   29 operador_unario: INCREMENTO
   30                | DECREMENTO

   31 operador: MAIS
   32         | MENOS_UNARIO
   33         | EXPONENCIACAO
   34         | BARRA
   35         | MODULO

   36 operador_comp: MENOR_QUE
   37              | MAIOR_QUE
   38              | MENOR_OU_IGUAL_A
   39              | MAIOR_OU_IGUAL_A
   40              | IGUAL_A
   41              | DIFERENTE_DE

   42 operador_composto: MAIS_IGUAL
   43                  | MENOS_IGUAL
   44                  | VEZES_IGUAL
   45                  | DIV_IGUAL
   46                  | EXPONENCIACAO_IGUAL

   47 type: CARACTERE
   48     | STRING
   49     | INTEIRO
   50     | FLOAT
   51     | DOUBLE
   52     | VOID
   53     | BOOLEANO

   54 valor: id

   55 expressoes: /* empty */
   56           | id
   57           | id operador id
   58           | id operador_comp id
   59           | expressoes E_LOGICO expressoes

   60 exprecoes_list: expressoes VIRGULA expressoes

   61 vars: ID VIRGULA ID
   62     | ID VIRGULA vars

   63 args: type ID
   64     | type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   65     | type ID VIRGULA args

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type IS TBEGIN stmts END
   67       | FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

   68 id: ID
   69   | DIGITO
   70   | ID COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA
   71   | PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAVE_ESQUERDA (258)
CHAVE_DIREITA (259)
PARENTESE_ESQUERDA (260) 13 14 66 67 71
PARENTESE_DIREITA (261) 13 14 66 67 71
COLCHETE_ESQUERDA (262) 64 70
COLCHETE_DIREITA (263) 64 70
PONTO_E_VIRGULA (264) 4 5
VIRGULA (265) 60 61 62 64 65
PONTO (266)
DOIS_PONTOS (267)
E_LOGICO (268) 59
E_LOGICO_CURTO_CIRCUITO (269)
OU_LOGICO (270)
OU_LOGICO_CURTO_CIRCUITO (271)
EXCLAMACAO (272)
ASTERISCO (273)
PRINT_INT (274)
PRINT_FLOAT (275)
PRINT_CHAR (276)
PRINT_STRING (277)
MODULO (278) 35
BARRA (279) 34
INCREMENTO (280) 29
DECREMENTO (281) 30
MAIS (282) 31
MENOS_UNARIO (283) 32
EXPONENCIACAO (284) 33
ATRIBUICAO (285) 24 28
OPERADOR_TERNARIO (286)
MENOR_QUE (287) 36
MAIOR_QUE (288) 37
MENOR_OU_IGUAL_A (289) 38
MAIOR_OU_IGUAL_A (290) 39
IGUAL_A (291) 40
DIFERENTE_DE (292) 41
MAIS_IGUAL (293) 42
MENOS_IGUAL (294) 43
VEZES_IGUAL (295) 44
DIV_IGUAL (296) 45
EXPONENCIACAO_IGUAL (297) 46
FOR (298)
END_FOR (299)
DO (300)
WHILE (301) 14
END_WHILE (302) 14
SWITCH (303)
END_SWITCH (304)
CASE (305)
END_CASE (306)
DEFAULT (307)
IF (308) 13
END_IF (309) 13
ELSE (310) 18 19
ELSEIF (311)
THEN (312) 13 18
STRUCT (313)
IS (314) 66 67
END (315) 66 67
FUNCAO (316) 66 67
PROC (317)
RETURN (318) 66 67
TBEGIN (319) 66 67
CONSTANTE (320)
PRINTF (321)
SCANF (322)
CARACTERE (323) 47
STRING (324) 48
INTEIRO (325) 49
FLOAT (326) 50
DOUBLE (327) 51
VOID (328) 52
BOOLEANO (329) 53
TRUE (330)
FALSE (331)
JUMP (332)
BREAK (333)
TNULL (334)
DIGITO (335) 69
ID (336) 6 24 25 26 27 61 62 63 64 65 66 67 68 70
LITERAL_QUALQUER (337)


Nonterminals, with rules where they appear

$accept (83)
    on left: 0
prog (84)
    on left: 1, on right: 0
subprog (85)
    on left: 2 3, on right: 1 3
stmts (86)
    on left: 4 5, on right: 1 5 13 14 18 66 67
decl (87)
    on left: 6 7 8, on right: 8 9
stmt (88)
    on left: 9 10 11 12, on right: 4 5
if_stmt (89)
    on left: 13, on right: 10 19
while_stmt (90)
    on left: 14, on right: 11
elses_opcoes (91)
    on left: 15 16 17, on right: 13
else (92)
    on left: 18, on right: 16
elseif (93)
    on left: 19, on right: 17
atribuicoes (94)
    on left: 20 21 22 23, on right: 12
atribuicao_simples (95)
    on left: 24, on right: 20
atribuicao_unaria (96)
    on left: 25 26, on right: 21
atribuicao_composta (97)
    on left: 27, on right: 22
atribuicao_paralela (98)
    on left: 28, on right: 23
operador_unario (99)
    on left: 29 30, on right: 25 26
operador (100)
    on left: 31 32 33 34 35, on right: 57
operador_comp (101)
    on left: 36 37 38 39 40 41, on right: 58
operador_composto (102)
    on left: 42 43 44 45 46, on right: 27
type (103)
    on left: 47 48 49 50 51 52 53, on right: 6 7 8 63 64 65 66 67
valor (104)
    on left: 54, on right: 13 27
expressoes (105)
    on left: 55 56 57 58 59, on right: 14 59 60 70 71
exprecoes_list (106)
    on left: 60, on right: 28
vars (107)
    on left: 61 62, on right: 7 8 28 62
args (108)
    on left: 63 64 65, on right: 64 65 67
funcao (109)
    on left: 66 67, on right: 2 3
id (110)
    on left: 68 69 70 71, on right: 24 54 56 57 58


state 0

    0 $accept: . prog $end

    FUNCAO  shift, and go to state 1

    prog     go to state 2
    subprog  go to state 3
    funcao   go to state 4


state 1

   66 funcao: FUNCAO . ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type IS TBEGIN stmts END
   67       | FUNCAO . ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    ID  shift, and go to state 5


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 6


state 3

    1 prog: subprog . stmts
    3 subprog: subprog . funcao

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    FUNCAO      shift, and go to state 1
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 19
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31
    funcao               go to state 32


state 4

    2 subprog: funcao .

    $default  reduce using rule 2 (subprog)


state 5

   66 funcao: FUNCAO ID . PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type IS TBEGIN stmts END
   67       | FUNCAO ID . PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    PARENTESE_ESQUERDA  shift, and go to state 33


state 6

    0 $accept: prog $end .

    $default  accept


state 7

   29 operador_unario: INCREMENTO .

    $default  reduce using rule 29 (operador_unario)


state 8

   30 operador_unario: DECREMENTO .

    $default  reduce using rule 30 (operador_unario)


state 9

   14 while_stmt: WHILE . PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 34


state 10

   13 if_stmt: IF . PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 35


state 11

   47 type: CARACTERE .

    $default  reduce using rule 47 (type)


state 12

   48 type: STRING .

    $default  reduce using rule 48 (type)


state 13

   49 type: INTEIRO .

    $default  reduce using rule 49 (type)


state 14

   50 type: FLOAT .

    $default  reduce using rule 50 (type)


state 15

   51 type: DOUBLE .

    $default  reduce using rule 51 (type)


state 16

   52 type: VOID .

    $default  reduce using rule 52 (type)


state 17

   53 type: BOOLEANO .

    $default  reduce using rule 53 (type)


state 18

   24 atribuicao_simples: ID . ATRIBUICAO id
   25 atribuicao_unaria: ID . operador_unario
   27 atribuicao_composta: ID . operador_composto valor
   61 vars: ID . VIRGULA ID
   62     | ID . VIRGULA vars

    VIRGULA              shift, and go to state 36
    INCREMENTO           shift, and go to state 7
    DECREMENTO           shift, and go to state 8
    ATRIBUICAO           shift, and go to state 37
    MAIS_IGUAL           shift, and go to state 38
    MENOS_IGUAL          shift, and go to state 39
    VEZES_IGUAL          shift, and go to state 40
    DIV_IGUAL            shift, and go to state 41
    EXPONENCIACAO_IGUAL  shift, and go to state 42

    operador_unario    go to state 43
    operador_composto  go to state 44


state 19

    1 prog: subprog stmts .

    $default  reduce using rule 1 (prog)


state 20

    9 stmt: decl .

    $default  reduce using rule 9 (stmt)


state 21

    4 stmts: stmt . PONTO_E_VIRGULA
    5      | stmt . PONTO_E_VIRGULA stmts

    PONTO_E_VIRGULA  shift, and go to state 45


state 22

   10 stmt: if_stmt .

    $default  reduce using rule 10 (stmt)


state 23

   11 stmt: while_stmt .

    $default  reduce using rule 11 (stmt)


state 24

   12 stmt: atribuicoes .

    $default  reduce using rule 12 (stmt)


state 25

   20 atribuicoes: atribuicao_simples .

    $default  reduce using rule 20 (atribuicoes)


state 26

   21 atribuicoes: atribuicao_unaria .

    $default  reduce using rule 21 (atribuicoes)


state 27

   22 atribuicoes: atribuicao_composta .

    $default  reduce using rule 22 (atribuicoes)


state 28

   23 atribuicoes: atribuicao_paralela .

    $default  reduce using rule 23 (atribuicoes)


state 29

   26 atribuicao_unaria: operador_unario . ID

    ID  shift, and go to state 46


state 30

    6 decl: type . ID
    7     | type . vars
    8     | type . vars decl

    ID  shift, and go to state 47

    vars  go to state 48


state 31

   28 atribuicao_paralela: vars . ATRIBUICAO exprecoes_list

    ATRIBUICAO  shift, and go to state 49


state 32

    3 subprog: subprog funcao .

    $default  reduce using rule 3 (subprog)


state 33

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA . PARENTESE_DIREITA RETURN type IS TBEGIN stmts END
   67       | FUNCAO ID PARENTESE_ESQUERDA . args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    PARENTESE_DIREITA  shift, and go to state 50
    CARACTERE          shift, and go to state 11
    STRING             shift, and go to state 12
    INTEIRO            shift, and go to state 13
    FLOAT              shift, and go to state 14
    DOUBLE             shift, and go to state 15
    VOID               shift, and go to state 16
    BOOLEANO           shift, and go to state 17

    type  go to state 51
    args  go to state 52


state 34

   14 while_stmt: WHILE PARENTESE_ESQUERDA . expressoes PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    $default  reduce using rule 55 (expressoes)

    expressoes  go to state 56
    id          go to state 57


state 35

   13 if_stmt: IF PARENTESE_ESQUERDA . valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    valor  go to state 58
    id     go to state 59


state 36

   61 vars: ID VIRGULA . ID
   62     | ID VIRGULA . vars

    ID  shift, and go to state 60

    vars  go to state 61


state 37

   24 atribuicao_simples: ID ATRIBUICAO . id

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    id  go to state 62


state 38

   42 operador_composto: MAIS_IGUAL .

    $default  reduce using rule 42 (operador_composto)


state 39

   43 operador_composto: MENOS_IGUAL .

    $default  reduce using rule 43 (operador_composto)


state 40

   44 operador_composto: VEZES_IGUAL .

    $default  reduce using rule 44 (operador_composto)


state 41

   45 operador_composto: DIV_IGUAL .

    $default  reduce using rule 45 (operador_composto)


state 42

   46 operador_composto: EXPONENCIACAO_IGUAL .

    $default  reduce using rule 46 (operador_composto)


state 43

   25 atribuicao_unaria: ID operador_unario .

    $default  reduce using rule 25 (atribuicao_unaria)


state 44

   27 atribuicao_composta: ID operador_composto . valor

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    valor  go to state 63
    id     go to state 59


state 45

    4 stmts: stmt PONTO_E_VIRGULA .
    5      | stmt PONTO_E_VIRGULA . stmts

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    $default  reduce using rule 4 (stmts)

    stmts                go to state 64
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 46

   26 atribuicao_unaria: operador_unario ID .

    $default  reduce using rule 26 (atribuicao_unaria)


state 47

    6 decl: type ID .
   61 vars: ID . VIRGULA ID
   62     | ID . VIRGULA vars

    VIRGULA  shift, and go to state 36

    $default  reduce using rule 6 (decl)


state 48

    7 decl: type vars .
    8     | type vars . decl

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    $default  reduce using rule 7 (decl)

    decl  go to state 65
    type  go to state 30


state 49

   28 atribuicao_paralela: vars ATRIBUICAO . exprecoes_list

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    $default  reduce using rule 55 (expressoes)

    expressoes      go to state 66
    exprecoes_list  go to state 67
    id              go to state 57


state 50

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA . RETURN type IS TBEGIN stmts END

    RETURN  shift, and go to state 68


state 51

   63 args: type . ID
   64     | type . ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   65     | type . ID VIRGULA args

    ID  shift, and go to state 69


state 52

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args . PARENTESE_DIREITA RETURN type IS TBEGIN stmts END

    PARENTESE_DIREITA  shift, and go to state 70


state 53

   71 id: PARENTESE_ESQUERDA . expressoes PARENTESE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    $default  reduce using rule 55 (expressoes)

    expressoes  go to state 71
    id          go to state 57


state 54

   69 id: DIGITO .

    $default  reduce using rule 69 (id)


state 55

   68 id: ID .
   70   | ID . COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA

    COLCHETE_ESQUERDA  shift, and go to state 72

    $default  reduce using rule 68 (id)


state 56

   14 while_stmt: WHILE PARENTESE_ESQUERDA expressoes . PARENTESE_DIREITA stmts END_WHILE
   59 expressoes: expressoes . E_LOGICO expressoes

    PARENTESE_DIREITA  shift, and go to state 73
    E_LOGICO           shift, and go to state 74


state 57

   56 expressoes: id .
   57           | id . operador id
   58           | id . operador_comp id

    MODULO            shift, and go to state 75
    BARRA             shift, and go to state 76
    MAIS              shift, and go to state 77
    MENOS_UNARIO      shift, and go to state 78
    EXPONENCIACAO     shift, and go to state 79
    MENOR_QUE         shift, and go to state 80
    MAIOR_QUE         shift, and go to state 81
    MENOR_OU_IGUAL_A  shift, and go to state 82
    MAIOR_OU_IGUAL_A  shift, and go to state 83
    IGUAL_A           shift, and go to state 84
    DIFERENTE_DE      shift, and go to state 85

    $default  reduce using rule 56 (expressoes)

    operador       go to state 86
    operador_comp  go to state 87


state 58

   13 if_stmt: IF PARENTESE_ESQUERDA valor . PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_DIREITA  shift, and go to state 88


state 59

   54 valor: id .

    $default  reduce using rule 54 (valor)


state 60

   61 vars: ID . VIRGULA ID
   61     | ID VIRGULA ID .
   62     | ID . VIRGULA vars

    VIRGULA  shift, and go to state 36

    $default  reduce using rule 61 (vars)


state 61

   62 vars: ID VIRGULA vars .

    $default  reduce using rule 62 (vars)


state 62

   24 atribuicao_simples: ID ATRIBUICAO id .

    $default  reduce using rule 24 (atribuicao_simples)


state 63

   27 atribuicao_composta: ID operador_composto valor .

    $default  reduce using rule 27 (atribuicao_composta)


state 64

    5 stmts: stmt PONTO_E_VIRGULA stmts .

    $default  reduce using rule 5 (stmts)


state 65

    8 decl: type vars decl .

    $default  reduce using rule 8 (decl)


state 66

   59 expressoes: expressoes . E_LOGICO expressoes
   60 exprecoes_list: expressoes . VIRGULA expressoes

    VIRGULA   shift, and go to state 89
    E_LOGICO  shift, and go to state 74


state 67

   28 atribuicao_paralela: vars ATRIBUICAO exprecoes_list .

    $default  reduce using rule 28 (atribuicao_paralela)


state 68

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN . type IS TBEGIN stmts END

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 90


state 69

   63 args: type ID .
   64     | type ID . COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   65     | type ID . VIRGULA args

    COLCHETE_ESQUERDA  shift, and go to state 91
    VIRGULA            shift, and go to state 92

    $default  reduce using rule 63 (args)


state 70

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA . RETURN type IS TBEGIN stmts END

    RETURN  shift, and go to state 93


state 71

   59 expressoes: expressoes . E_LOGICO expressoes
   71 id: PARENTESE_ESQUERDA expressoes . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 94
    E_LOGICO           shift, and go to state 74


state 72

   70 id: ID COLCHETE_ESQUERDA . expressoes COLCHETE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    $default  reduce using rule 55 (expressoes)

    expressoes  go to state 95
    id          go to state 57


state 73

   14 while_stmt: WHILE PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA . stmts END_WHILE

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 96
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 74

   59 expressoes: expressoes E_LOGICO . expressoes

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    $default  reduce using rule 55 (expressoes)

    expressoes  go to state 97
    id          go to state 57


state 75

   35 operador: MODULO .

    $default  reduce using rule 35 (operador)


state 76

   34 operador: BARRA .

    $default  reduce using rule 34 (operador)


state 77

   31 operador: MAIS .

    $default  reduce using rule 31 (operador)


state 78

   32 operador: MENOS_UNARIO .

    $default  reduce using rule 32 (operador)


state 79

   33 operador: EXPONENCIACAO .

    $default  reduce using rule 33 (operador)


state 80

   36 operador_comp: MENOR_QUE .

    $default  reduce using rule 36 (operador_comp)


state 81

   37 operador_comp: MAIOR_QUE .

    $default  reduce using rule 37 (operador_comp)


state 82

   38 operador_comp: MENOR_OU_IGUAL_A .

    $default  reduce using rule 38 (operador_comp)


state 83

   39 operador_comp: MAIOR_OU_IGUAL_A .

    $default  reduce using rule 39 (operador_comp)


state 84

   40 operador_comp: IGUAL_A .

    $default  reduce using rule 40 (operador_comp)


state 85

   41 operador_comp: DIFERENTE_DE .

    $default  reduce using rule 41 (operador_comp)


state 86

   57 expressoes: id operador . id

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    id  go to state 98


state 87

   58 expressoes: id operador_comp . id

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    id  go to state 99


state 88

   13 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA . THEN stmts elses_opcoes END_IF

    THEN  shift, and go to state 100


state 89

   60 exprecoes_list: expressoes VIRGULA . expressoes

    PARENTESE_ESQUERDA  shift, and go to state 53
    DIGITO              shift, and go to state 54
    ID                  shift, and go to state 55

    $default  reduce using rule 55 (expressoes)

    expressoes  go to state 101
    id          go to state 57


state 90

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type . IS TBEGIN stmts END

    IS  shift, and go to state 102


state 91

   64 args: type ID COLCHETE_ESQUERDA . COLCHETE_DIREITA VIRGULA args

    COLCHETE_DIREITA  shift, and go to state 103


state 92

   65 args: type ID VIRGULA . args

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 51
    args  go to state 104


state 93

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN . type IS TBEGIN stmts END

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 105


state 94

   71 id: PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA .

    $default  reduce using rule 71 (id)


state 95

   59 expressoes: expressoes . E_LOGICO expressoes
   70 id: ID COLCHETE_ESQUERDA expressoes . COLCHETE_DIREITA

    COLCHETE_DIREITA  shift, and go to state 106
    E_LOGICO          shift, and go to state 74


state 96

   14 while_stmt: WHILE PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA stmts . END_WHILE

    END_WHILE  shift, and go to state 107


state 97

   59 expressoes: expressoes . E_LOGICO expressoes
   59           | expressoes E_LOGICO expressoes .

    E_LOGICO  shift, and go to state 74

    E_LOGICO  [reduce using rule 59 (expressoes)]
    $default  reduce using rule 59 (expressoes)


state 98

   57 expressoes: id operador id .

    $default  reduce using rule 57 (expressoes)


state 99

   58 expressoes: id operador_comp id .

    $default  reduce using rule 58 (expressoes)


state 100

   13 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN . stmts elses_opcoes END_IF

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 108
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 101

   59 expressoes: expressoes . E_LOGICO expressoes
   60 exprecoes_list: expressoes VIRGULA expressoes .

    E_LOGICO  shift, and go to state 74

    $default  reduce using rule 60 (exprecoes_list)


state 102

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type IS . TBEGIN stmts END

    TBEGIN  shift, and go to state 109


state 103

   64 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA . VIRGULA args

    VIRGULA  shift, and go to state 110


state 104

   65 args: type ID VIRGULA args .

    $default  reduce using rule 65 (args)


state 105

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type . IS TBEGIN stmts END

    IS  shift, and go to state 111


state 106

   70 id: ID COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA .

    $default  reduce using rule 70 (id)


state 107

   14 while_stmt: WHILE PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA stmts END_WHILE .

    $default  reduce using rule 14 (while_stmt)


state 108

   13 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts . elses_opcoes END_IF

    ELSE  shift, and go to state 112

    $default  reduce using rule 15 (elses_opcoes)

    elses_opcoes  go to state 113
    else          go to state 114
    elseif        go to state 115


state 109

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type IS TBEGIN . stmts END

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 116
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 110

   64 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA . args

    CARACTERE  shift, and go to state 11
    STRING     shift, and go to state 12
    INTEIRO    shift, and go to state 13
    FLOAT      shift, and go to state 14
    DOUBLE     shift, and go to state 15
    VOID       shift, and go to state 16
    BOOLEANO   shift, and go to state 17

    type  go to state 51
    args  go to state 117


state 111

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS . TBEGIN stmts END

    TBEGIN  shift, and go to state 118


state 112

   18 else: ELSE . THEN stmts
   19 elseif: ELSE . if_stmt

    IF    shift, and go to state 10
    THEN  shift, and go to state 119

    if_stmt  go to state 120


state 113

   13 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes . END_IF

    END_IF  shift, and go to state 121


state 114

   16 elses_opcoes: else .

    $default  reduce using rule 16 (elses_opcoes)


state 115

   17 elses_opcoes: elseif .

    $default  reduce using rule 17 (elses_opcoes)


state 116

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type IS TBEGIN stmts . END

    END  shift, and go to state 122


state 117

   64 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args .

    $default  reduce using rule 64 (args)


state 118

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN . stmts END

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 123
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 119

   18 else: ELSE THEN . stmts

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    WHILE       shift, and go to state 9
    IF          shift, and go to state 10
    CARACTERE   shift, and go to state 11
    STRING      shift, and go to state 12
    INTEIRO     shift, and go to state 13
    FLOAT       shift, and go to state 14
    DOUBLE      shift, and go to state 15
    VOID        shift, and go to state 16
    BOOLEANO    shift, and go to state 17
    ID          shift, and go to state 18

    stmts                go to state 124
    decl                 go to state 20
    stmt                 go to state 21
    if_stmt              go to state 22
    while_stmt           go to state 23
    atribuicoes          go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    type                 go to state 30
    vars                 go to state 31


state 120

   19 elseif: ELSE if_stmt .

    $default  reduce using rule 19 (elseif)


state 121

   13 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF .

    $default  reduce using rule 13 (if_stmt)


state 122

   66 funcao: FUNCAO ID PARENTESE_ESQUERDA PARENTESE_DIREITA RETURN type IS TBEGIN stmts END .

    $default  reduce using rule 66 (funcao)


state 123

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts . END

    END  shift, and go to state 125


state 124

   18 else: ELSE THEN stmts .

    $default  reduce using rule 18 (else)


state 125

   67 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END .

    $default  reduce using rule 67 (funcao)
