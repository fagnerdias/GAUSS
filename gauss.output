Terminals unused in grammar

   PONTO
   E_LOGICO_CURTO_CIRCUITO
   OU_LOGICO_CURTO_CIRCUITO
   EXCLAMACAO
   ASTERISCO
   OPERADOR_TERNARIO
   DO
   END_CASE
   ELSEIF
   PROC
   CONSTANTE
   TRUE
   FALSE
   JUMP
   BREAK
   TNULL
   LITERAL_QUALQUER


Grammar

    0 $accept: prog $end

    1 prog: subprog
    2     | struct_list subprog

    3 subprog: funcao
    4        | subprog funcao

    5 stmts: stmt
    6      | stmt stmts

    7 decl: type id
    8     | type vars
    9     | type vars decl
   10     | type atribuicoes

   11 struct_list: struct
   12            | struct struct_list

   13 struct: STRUCT ID IS decl_list ENDSTRUCT

   14 stmt: decl PONTO_E_VIRGULA
   15     | if_stmt
   16     | while_stmt
   17     | for_stmt
   18     | atribuicoes PONTO_E_VIRGULA
   19     | invoca_procedimento PONTO_E_VIRGULA
   20     | switch_stmt
   21     | print PONTO_E_VIRGULA
   22     | scan PONTO_E_VIRGULA

   23 print: PRINTF PARENTESE_ESQUERDA ids types_args PARENTESE_DIREITA

   24 scan: SCANF PARENTESE_ESQUERDA ids types_args PARENTESE_DIREITA

   25 ids: expressoes
   26    | ids VIRGULA expressoes

   27 types_args: /* empty */
   28           | prints_list

   29 prints_list: VIRGULA tipos_prints
   30            | VIRGULA tipos_prints prints_list

   31 tipos_prints: PRINT_INT
   32             | PRINT_FLOAT
   33             | PRINT_CHAR
   34             | PRINT_STRING

   35 invoca_procedimento: ID PARENTESE_ESQUERDA parametros PARENTESE_DIREITA

   36 parametros: expressoes
   37           | expressoes VIRGULA parametros

   38 decl_list: decl PONTO_E_VIRGULA
   39          | decl PONTO_E_VIRGULA decl_list

   40 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

   42 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

   43 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes

   44 elses_opcoes: /* empty */
   45             | ELSE THEN stmts
   46             | ELSE if_stmt_in_else

   47 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default END_SWITCH

   48 default: /* empty */
   49        | DEFAULT stmts

   50 case_stmt: case
   51          | case case_stmt

   52 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS stmts

   53 atribuicoes: atribuicao_simples
   54            | atribuicao_unaria
   55            | atribuicao_composta
   56            | atribuicao_paralela

   57 atribuicao_simples: id ATRIBUICAO expressoes

   58 atribuicao_unaria: id operador_unario
   59                  | operador_unario ID

   60 atribuicao_composta: id operador_composto valor

   61 atribuicao_paralela: vars ATRIBUICAO expressoes_list

   62 operador_unario: INCREMENTO
   63                | DECREMENTO

   64 operador: MAIS
   65         | MENOS_UNARIO
   66         | EXPONENCIACAO
   67         | BARRA
   68         | MODULO

   69 operador_comp: MENOR_QUE
   70              | MAIOR_QUE
   71              | MENOR_OU_IGUAL_A
   72              | MAIOR_OU_IGUAL_A
   73              | IGUAL_A
   74              | DIFERENTE_DE

   75 operador_composto: MAIS_IGUAL
   76                  | MENOS_IGUAL
   77                  | VEZES_IGUAL
   78                  | DIV_IGUAL
   79                  | EXPONENCIACAO_IGUAL

   80 type: CARACTERE
   81     | STRING
   82     | INTEIRO
   83     | FLOAT
   84     | DOUBLE
   85     | VOID
   86     | BOOLEANO

   87 valor: expressoes E_LOGICO expressoes
   88      | expressoes OU_LOGICO expressoes
   89      | expressoes

   90 expressoes: /* empty */
   91           | id
   92           | id operador id
   93           | id operador_comp id
   94           | vetorial

   95 vetorial: CHAVE_ESQUERDA lista_de_digitos CHAVE_DIREITA

   96 lista_de_digitos: DIGITO
   97                 | DIGITO VIRGULA lista_de_digitos

   98 expressoes_list: expressoes VIRGULA expressoes

   99 vars: ID VIRGULA ID
  100     | ID VIRGULA vars

  101 args: /* empty */
  102     | type ID
  103     | type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
  104     | type ID VIRGULA args

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

  106 id: ID
  107   | DIGITO
  108   | ID COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA
  109   | PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAVE_ESQUERDA (258) 95
CHAVE_DIREITA (259) 95
PARENTESE_ESQUERDA (260) 23 24 35 40 41 42 43 47 52 105 109
PARENTESE_DIREITA (261) 23 24 35 40 41 42 43 47 52 105 109
COLCHETE_ESQUERDA (262) 103 108
COLCHETE_DIREITA (263) 103 108
PONTO_E_VIRGULA (264) 14 18 19 21 22 38 39 41
VIRGULA (265) 26 29 30 37 97 98 99 100 103 104
PONTO (266)
DOIS_PONTOS (267) 52
E_LOGICO (268) 87
E_LOGICO_CURTO_CIRCUITO (269)
OU_LOGICO (270) 88
OU_LOGICO_CURTO_CIRCUITO (271)
EXCLAMACAO (272)
ASTERISCO (273)
PRINT_INT (274) 31
PRINT_FLOAT (275) 32
PRINT_CHAR (276) 33
PRINT_STRING (277) 34
MODULO (278) 68
BARRA (279) 67
INCREMENTO (280) 62
DECREMENTO (281) 63
MAIS (282) 64
MENOS_UNARIO (283) 65
EXPONENCIACAO (284) 66
ATRIBUICAO (285) 57 61
OPERADOR_TERNARIO (286)
MENOR_QUE (287) 69
MAIOR_QUE (288) 70
MENOR_OU_IGUAL_A (289) 71
MAIOR_OU_IGUAL_A (290) 72
IGUAL_A (291) 73
DIFERENTE_DE (292) 74
MAIS_IGUAL (293) 75
MENOS_IGUAL (294) 76
VEZES_IGUAL (295) 77
DIV_IGUAL (296) 78
EXPONENCIACAO_IGUAL (297) 79
FOR (298) 41
END_FOR (299) 41
DO (300)
WHILE (301) 40
END_WHILE (302) 40
SWITCH (303) 47
END_SWITCH (304) 47
CASE (305) 52
END_CASE (306)
DEFAULT (307) 49
IF (308) 42 43
END_IF (309) 42
ELSE (310) 45 46
ELSEIF (311)
THEN (312) 42 43 45
STRUCT (313) 13
ENDSTRUCT (314) 13
IS (315) 13 105
END (316) 105
FUNCAO (317) 105
PROC (318)
RETURN (319) 105
TBEGIN (320) 105
CONSTANTE (321)
PRINTF (322) 23
SCANF (323) 24
CARACTERE (324) 80
STRING (325) 81
INTEIRO (326) 82
FLOAT (327) 83
DOUBLE (328) 84
VOID (329) 85
BOOLEANO (330) 86
TRUE (331)
FALSE (332)
JUMP (333)
BREAK (334)
TNULL (335)
DIGITO (336) 96 97 107
ID (337) 13 35 59 99 100 102 103 104 105 106 108
LITERAL_QUALQUER (338)


Nonterminals, with rules where they appear

$accept (84)
    on left: 0
prog (85)
    on left: 1 2, on right: 0
subprog (86)
    on left: 3 4, on right: 1 2 4
stmts (87)
    on left: 5 6, on right: 6 40 41 42 43 45 49 52 105
decl (88)
    on left: 7 8 9 10, on right: 9 14 38 39 41
struct_list (89)
    on left: 11 12, on right: 2 12
struct (90)
    on left: 13, on right: 11 12
stmt (91)
    on left: 14 15 16 17 18 19 20 21 22, on right: 5 6
print (92)
    on left: 23, on right: 21
scan (93)
    on left: 24, on right: 22
ids (94)
    on left: 25 26, on right: 23 24 26
types_args (95)
    on left: 27 28, on right: 23 24
prints_list (96)
    on left: 29 30, on right: 28 30
tipos_prints (97)
    on left: 31 32 33 34, on right: 29 30
invoca_procedimento (98)
    on left: 35, on right: 19
parametros (99)
    on left: 36 37, on right: 35 37
decl_list (100)
    on left: 38 39, on right: 13 39
while_stmt (101)
    on left: 40, on right: 16
for_stmt (102)
    on left: 41, on right: 17
if_stmt (103)
    on left: 42, on right: 15
if_stmt_in_else (104)
    on left: 43, on right: 46
elses_opcoes (105)
    on left: 44 45 46, on right: 42 43
switch_stmt (106)
    on left: 47, on right: 20
default (107)
    on left: 48 49, on right: 47
case_stmt (108)
    on left: 50 51, on right: 47 51
case (109)
    on left: 52, on right: 50 51
atribuicoes (110)
    on left: 53 54 55 56, on right: 10 18 41
atribuicao_simples (111)
    on left: 57, on right: 53
atribuicao_unaria (112)
    on left: 58 59, on right: 54
atribuicao_composta (113)
    on left: 60, on right: 55
atribuicao_paralela (114)
    on left: 61, on right: 56
operador_unario (115)
    on left: 62 63, on right: 58 59
operador (116)
    on left: 64 65 66 67 68, on right: 92
operador_comp (117)
    on left: 69 70 71 72 73 74, on right: 93
operador_composto (118)
    on left: 75 76 77 78 79, on right: 60
type (119)
    on left: 80 81 82 83 84 85 86, on right: 7 8 9 10 102 103 104 105
valor (120)
    on left: 87 88 89, on right: 40 41 42 43 47 60
expressoes (121)
    on left: 90 91 92 93 94, on right: 25 26 36 37 57 87 88 89 98 108
    109
vetorial (122)
    on left: 95, on right: 94
lista_de_digitos (123)
    on left: 96 97, on right: 95 97
expressoes_list (124)
    on left: 98, on right: 61
vars (125)
    on left: 99 100, on right: 8 9 61 100
args (126)
    on left: 101 102 103 104, on right: 103 104 105
funcao (127)
    on left: 105, on right: 3 4
id (128)
    on left: 106 107 108 109, on right: 7 52 57 58 60 91 92 93


state 0

    0 $accept: . prog $end

    STRUCT  shift, and go to state 1
    FUNCAO  shift, and go to state 2

    prog         go to state 3
    subprog      go to state 4
    struct_list  go to state 5
    struct       go to state 6
    funcao       go to state 7


state 1

   13 struct: STRUCT . ID IS decl_list ENDSTRUCT

    ID  shift, and go to state 8


state 2

  105 funcao: FUNCAO . ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    ID  shift, and go to state 9


state 3

    0 $accept: prog . $end

    $end  shift, and go to state 10


state 4

    1 prog: subprog .
    4 subprog: subprog . funcao

    FUNCAO  shift, and go to state 2

    $default  reduce using rule 1 (prog)

    funcao  go to state 11


state 5

    2 prog: struct_list . subprog

    FUNCAO  shift, and go to state 2

    subprog  go to state 12
    funcao   go to state 7


state 6

   11 struct_list: struct .
   12            | struct . struct_list

    STRUCT  shift, and go to state 1

    $default  reduce using rule 11 (struct_list)

    struct_list  go to state 13
    struct       go to state 6


state 7

    3 subprog: funcao .

    $default  reduce using rule 3 (subprog)


state 8

   13 struct: STRUCT ID . IS decl_list ENDSTRUCT

    IS  shift, and go to state 14


state 9

  105 funcao: FUNCAO ID . PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    PARENTESE_ESQUERDA  shift, and go to state 15


state 10

    0 $accept: prog $end .

    $default  accept


state 11

    4 subprog: subprog funcao .

    $default  reduce using rule 4 (subprog)


state 12

    2 prog: struct_list subprog .
    4 subprog: subprog . funcao

    FUNCAO  shift, and go to state 2

    $default  reduce using rule 2 (prog)

    funcao  go to state 11


state 13

   12 struct_list: struct struct_list .

    $default  reduce using rule 12 (struct_list)


state 14

   13 struct: STRUCT ID IS . decl_list ENDSTRUCT

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    decl       go to state 23
    decl_list  go to state 24
    type       go to state 25


state 15

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA . args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 101 (args)

    type  go to state 26
    args  go to state 27


state 16

   80 type: CARACTERE .

    $default  reduce using rule 80 (type)


state 17

   81 type: STRING .

    $default  reduce using rule 81 (type)


state 18

   82 type: INTEIRO .

    $default  reduce using rule 82 (type)


state 19

   83 type: FLOAT .

    $default  reduce using rule 83 (type)


state 20

   84 type: DOUBLE .

    $default  reduce using rule 84 (type)


state 21

   85 type: VOID .

    $default  reduce using rule 85 (type)


state 22

   86 type: BOOLEANO .

    $default  reduce using rule 86 (type)


state 23

   38 decl_list: decl . PONTO_E_VIRGULA
   39          | decl . PONTO_E_VIRGULA decl_list

    PONTO_E_VIRGULA  shift, and go to state 28


state 24

   13 struct: STRUCT ID IS decl_list . ENDSTRUCT

    ENDSTRUCT  shift, and go to state 29


state 25

    7 decl: type . id
    8     | type . vars
    9     | type . vars decl
   10     | type . atribuicoes

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 34

    atribuicoes          go to state 35
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    vars                 go to state 41
    id                   go to state 42


state 26

  102 args: type . ID
  103     | type . ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
  104     | type . ID VIRGULA args

    ID  shift, and go to state 43


state 27

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args . PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    PARENTESE_DIREITA  shift, and go to state 44


state 28

   38 decl_list: decl PONTO_E_VIRGULA .
   39          | decl PONTO_E_VIRGULA . decl_list

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 38 (decl_list)

    decl       go to state 23
    decl_list  go to state 45
    type       go to state 25


state 29

   13 struct: STRUCT ID IS decl_list ENDSTRUCT .

    $default  reduce using rule 13 (struct)


state 30

  109 id: PARENTESE_ESQUERDA . expressoes PARENTESE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    expressoes  go to state 48
    vetorial    go to state 49
    id          go to state 50


state 31

   62 operador_unario: INCREMENTO .

    $default  reduce using rule 62 (operador_unario)


state 32

   63 operador_unario: DECREMENTO .

    $default  reduce using rule 63 (operador_unario)


state 33

  107 id: DIGITO .

    $default  reduce using rule 107 (id)


state 34

   99 vars: ID . VIRGULA ID
  100     | ID . VIRGULA vars
  106 id: ID .
  108   | ID . COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA

    COLCHETE_ESQUERDA  shift, and go to state 51
    VIRGULA            shift, and go to state 52

    $default  reduce using rule 106 (id)


state 35

   10 decl: type atribuicoes .

    $default  reduce using rule 10 (decl)


state 36

   53 atribuicoes: atribuicao_simples .

    $default  reduce using rule 53 (atribuicoes)


state 37

   54 atribuicoes: atribuicao_unaria .

    $default  reduce using rule 54 (atribuicoes)


state 38

   55 atribuicoes: atribuicao_composta .

    $default  reduce using rule 55 (atribuicoes)


state 39

   56 atribuicoes: atribuicao_paralela .

    $default  reduce using rule 56 (atribuicoes)


state 40

   59 atribuicao_unaria: operador_unario . ID

    ID  shift, and go to state 53


state 41

    8 decl: type vars .
    9     | type vars . decl
   61 atribuicao_paralela: vars . ATRIBUICAO expressoes_list

    ATRIBUICAO  shift, and go to state 54
    CARACTERE   shift, and go to state 16
    STRING      shift, and go to state 17
    INTEIRO     shift, and go to state 18
    FLOAT       shift, and go to state 19
    DOUBLE      shift, and go to state 20
    VOID        shift, and go to state 21
    BOOLEANO    shift, and go to state 22

    $default  reduce using rule 8 (decl)

    decl  go to state 55
    type  go to state 25


state 42

    7 decl: type id .
   57 atribuicao_simples: id . ATRIBUICAO expressoes
   58 atribuicao_unaria: id . operador_unario
   60 atribuicao_composta: id . operador_composto valor

    INCREMENTO           shift, and go to state 31
    DECREMENTO           shift, and go to state 32
    ATRIBUICAO           shift, and go to state 56
    MAIS_IGUAL           shift, and go to state 57
    MENOS_IGUAL          shift, and go to state 58
    VEZES_IGUAL          shift, and go to state 59
    DIV_IGUAL            shift, and go to state 60
    EXPONENCIACAO_IGUAL  shift, and go to state 61

    $default  reduce using rule 7 (decl)

    operador_unario    go to state 62
    operador_composto  go to state 63


state 43

  102 args: type ID .
  103     | type ID . COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
  104     | type ID . VIRGULA args

    COLCHETE_ESQUERDA  shift, and go to state 64
    VIRGULA            shift, and go to state 65

    $default  reduce using rule 102 (args)


state 44

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA . RETURN type IS TBEGIN stmts END ID

    RETURN  shift, and go to state 66


state 45

   39 decl_list: decl PONTO_E_VIRGULA decl_list .

    $default  reduce using rule 39 (decl_list)


state 46

   95 vetorial: CHAVE_ESQUERDA . lista_de_digitos CHAVE_DIREITA

    DIGITO  shift, and go to state 67

    lista_de_digitos  go to state 68


state 47

  106 id: ID .
  108   | ID . COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA

    COLCHETE_ESQUERDA  shift, and go to state 51

    $default  reduce using rule 106 (id)


state 48

  109 id: PARENTESE_ESQUERDA expressoes . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 69


state 49

   94 expressoes: vetorial .

    $default  reduce using rule 94 (expressoes)


state 50

   91 expressoes: id .
   92           | id . operador id
   93           | id . operador_comp id

    MODULO            shift, and go to state 70
    BARRA             shift, and go to state 71
    MAIS              shift, and go to state 72
    MENOS_UNARIO      shift, and go to state 73
    EXPONENCIACAO     shift, and go to state 74
    MENOR_QUE         shift, and go to state 75
    MAIOR_QUE         shift, and go to state 76
    MENOR_OU_IGUAL_A  shift, and go to state 77
    MAIOR_OU_IGUAL_A  shift, and go to state 78
    IGUAL_A           shift, and go to state 79
    DIFERENTE_DE      shift, and go to state 80

    $default  reduce using rule 91 (expressoes)

    operador       go to state 81
    operador_comp  go to state 82


state 51

  108 id: ID COLCHETE_ESQUERDA . expressoes COLCHETE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    expressoes  go to state 83
    vetorial    go to state 49
    id          go to state 50


state 52

   99 vars: ID VIRGULA . ID
  100     | ID VIRGULA . vars

    ID  shift, and go to state 84

    vars  go to state 85


state 53

   59 atribuicao_unaria: operador_unario ID .

    $default  reduce using rule 59 (atribuicao_unaria)


state 54

   61 atribuicao_paralela: vars ATRIBUICAO . expressoes_list

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    expressoes       go to state 86
    vetorial         go to state 49
    expressoes_list  go to state 87
    id               go to state 50


state 55

    9 decl: type vars decl .

    $default  reduce using rule 9 (decl)


state 56

   57 atribuicao_simples: id ATRIBUICAO . expressoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    expressoes  go to state 88
    vetorial    go to state 49
    id          go to state 50


state 57

   75 operador_composto: MAIS_IGUAL .

    $default  reduce using rule 75 (operador_composto)


state 58

   76 operador_composto: MENOS_IGUAL .

    $default  reduce using rule 76 (operador_composto)


state 59

   77 operador_composto: VEZES_IGUAL .

    $default  reduce using rule 77 (operador_composto)


state 60

   78 operador_composto: DIV_IGUAL .

    $default  reduce using rule 78 (operador_composto)


state 61

   79 operador_composto: EXPONENCIACAO_IGUAL .

    $default  reduce using rule 79 (operador_composto)


state 62

   58 atribuicao_unaria: id operador_unario .

    $default  reduce using rule 58 (atribuicao_unaria)


state 63

   60 atribuicao_composta: id operador_composto . valor

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    valor       go to state 89
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 64

  103 args: type ID COLCHETE_ESQUERDA . COLCHETE_DIREITA VIRGULA args

    COLCHETE_DIREITA  shift, and go to state 91


state 65

  104 args: type ID VIRGULA . args

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 101 (args)

    type  go to state 26
    args  go to state 92


state 66

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN . type IS TBEGIN stmts END ID

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    type  go to state 93


state 67

   96 lista_de_digitos: DIGITO .
   97                 | DIGITO . VIRGULA lista_de_digitos

    VIRGULA  shift, and go to state 94

    $default  reduce using rule 96 (lista_de_digitos)


state 68

   95 vetorial: CHAVE_ESQUERDA lista_de_digitos . CHAVE_DIREITA

    CHAVE_DIREITA  shift, and go to state 95


state 69

  109 id: PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA .

    $default  reduce using rule 109 (id)


state 70

   68 operador: MODULO .

    $default  reduce using rule 68 (operador)


state 71

   67 operador: BARRA .

    $default  reduce using rule 67 (operador)


state 72

   64 operador: MAIS .

    $default  reduce using rule 64 (operador)


state 73

   65 operador: MENOS_UNARIO .

    $default  reduce using rule 65 (operador)


state 74

   66 operador: EXPONENCIACAO .

    $default  reduce using rule 66 (operador)


state 75

   69 operador_comp: MENOR_QUE .

    $default  reduce using rule 69 (operador_comp)


state 76

   70 operador_comp: MAIOR_QUE .

    $default  reduce using rule 70 (operador_comp)


state 77

   71 operador_comp: MENOR_OU_IGUAL_A .

    $default  reduce using rule 71 (operador_comp)


state 78

   72 operador_comp: MAIOR_OU_IGUAL_A .

    $default  reduce using rule 72 (operador_comp)


state 79

   73 operador_comp: IGUAL_A .

    $default  reduce using rule 73 (operador_comp)


state 80

   74 operador_comp: DIFERENTE_DE .

    $default  reduce using rule 74 (operador_comp)


state 81

   92 expressoes: id operador . id

    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    id  go to state 96


state 82

   93 expressoes: id operador_comp . id

    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    id  go to state 97


state 83

  108 id: ID COLCHETE_ESQUERDA expressoes . COLCHETE_DIREITA

    COLCHETE_DIREITA  shift, and go to state 98


state 84

   99 vars: ID . VIRGULA ID
   99     | ID VIRGULA ID .
  100     | ID . VIRGULA vars

    VIRGULA  shift, and go to state 52

    $default  reduce using rule 99 (vars)


state 85

  100 vars: ID VIRGULA vars .

    $default  reduce using rule 100 (vars)


state 86

   98 expressoes_list: expressoes . VIRGULA expressoes

    VIRGULA  shift, and go to state 99


state 87

   61 atribuicao_paralela: vars ATRIBUICAO expressoes_list .

    $default  reduce using rule 61 (atribuicao_paralela)


state 88

   57 atribuicao_simples: id ATRIBUICAO expressoes .

    $default  reduce using rule 57 (atribuicao_simples)


state 89

   60 atribuicao_composta: id operador_composto valor .

    $default  reduce using rule 60 (atribuicao_composta)


state 90

   87 valor: expressoes . E_LOGICO expressoes
   88      | expressoes . OU_LOGICO expressoes
   89      | expressoes .

    E_LOGICO   shift, and go to state 100
    OU_LOGICO  shift, and go to state 101

    $default  reduce using rule 89 (valor)


state 91

  103 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA . VIRGULA args

    VIRGULA  shift, and go to state 102


state 92

  104 args: type ID VIRGULA args .

    $default  reduce using rule 104 (args)


state 93

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type . IS TBEGIN stmts END ID

    IS  shift, and go to state 103


state 94

   97 lista_de_digitos: DIGITO VIRGULA . lista_de_digitos

    DIGITO  shift, and go to state 67

    lista_de_digitos  go to state 104


state 95

   95 vetorial: CHAVE_ESQUERDA lista_de_digitos CHAVE_DIREITA .

    $default  reduce using rule 95 (vetorial)


state 96

   92 expressoes: id operador id .

    $default  reduce using rule 92 (expressoes)


state 97

   93 expressoes: id operador_comp id .

    $default  reduce using rule 93 (expressoes)


state 98

  108 id: ID COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA .

    $default  reduce using rule 108 (id)


state 99

   98 expressoes_list: expressoes VIRGULA . expressoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    expressoes  go to state 105
    vetorial    go to state 49
    id          go to state 50


state 100

   87 valor: expressoes E_LOGICO . expressoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    expressoes  go to state 106
    vetorial    go to state 49
    id          go to state 50


state 101

   88 valor: expressoes OU_LOGICO . expressoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    expressoes  go to state 107
    vetorial    go to state 49
    id          go to state 50


state 102

  103 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA . args

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 101 (args)

    type  go to state 26
    args  go to state 108


state 103

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS . TBEGIN stmts END ID

    TBEGIN  shift, and go to state 109


state 104

   97 lista_de_digitos: DIGITO VIRGULA lista_de_digitos .

    $default  reduce using rule 97 (lista_de_digitos)


state 105

   98 expressoes_list: expressoes VIRGULA expressoes .

    $default  reduce using rule 98 (expressoes_list)


state 106

   87 valor: expressoes E_LOGICO expressoes .

    $default  reduce using rule 87 (valor)


state 107

   88 valor: expressoes OU_LOGICO expressoes .

    $default  reduce using rule 88 (valor)


state 108

  103 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args .

    $default  reduce using rule 103 (args)


state 109

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN . stmts END ID

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 117
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 110

   41 for_stmt: FOR . PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    PARENTESE_ESQUERDA  shift, and go to state 130


state 111

   40 while_stmt: WHILE . PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 131


state 112

   47 switch_stmt: SWITCH . PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default END_SWITCH

    PARENTESE_ESQUERDA  shift, and go to state 132


state 113

   42 if_stmt: IF . PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 133


state 114

   23 print: PRINTF . PARENTESE_ESQUERDA ids types_args PARENTESE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 134


state 115

   24 scan: SCANF . PARENTESE_ESQUERDA ids types_args PARENTESE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 135


state 116

   35 invoca_procedimento: ID . PARENTESE_ESQUERDA parametros PARENTESE_DIREITA
   99 vars: ID . VIRGULA ID
  100     | ID . VIRGULA vars
  106 id: ID .
  108   | ID . COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 136
    COLCHETE_ESQUERDA   shift, and go to state 51
    VIRGULA             shift, and go to state 52

    $default  reduce using rule 106 (id)


state 117

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts . END ID

    END  shift, and go to state 137


state 118

   14 stmt: decl . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 138


state 119

    5 stmts: stmt .
    6      | stmt . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    $default  reduce using rule 5 (stmts)

    stmts                go to state 139
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 120

   21 stmt: print . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 140


state 121

   22 stmt: scan . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 141


state 122

   19 stmt: invoca_procedimento . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 142


state 123

   16 stmt: while_stmt .

    $default  reduce using rule 16 (stmt)


state 124

   17 stmt: for_stmt .

    $default  reduce using rule 17 (stmt)


state 125

   15 stmt: if_stmt .

    $default  reduce using rule 15 (stmt)


state 126

   20 stmt: switch_stmt .

    $default  reduce using rule 20 (stmt)


state 127

   18 stmt: atribuicoes . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 143


state 128

   61 atribuicao_paralela: vars . ATRIBUICAO expressoes_list

    ATRIBUICAO  shift, and go to state 54


state 129

   57 atribuicao_simples: id . ATRIBUICAO expressoes
   58 atribuicao_unaria: id . operador_unario
   60 atribuicao_composta: id . operador_composto valor

    INCREMENTO           shift, and go to state 31
    DECREMENTO           shift, and go to state 32
    ATRIBUICAO           shift, and go to state 56
    MAIS_IGUAL           shift, and go to state 57
    MENOS_IGUAL          shift, and go to state 58
    VEZES_IGUAL          shift, and go to state 59
    DIV_IGUAL            shift, and go to state 60
    EXPONENCIACAO_IGUAL  shift, and go to state 61

    operador_unario    go to state 62
    operador_composto  go to state 63


state 130

   41 for_stmt: FOR PARENTESE_ESQUERDA . decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    decl  go to state 144
    type  go to state 25


state 131

   40 while_stmt: WHILE PARENTESE_ESQUERDA . valor PARENTESE_DIREITA stmts END_WHILE

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    valor       go to state 145
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 132

   47 switch_stmt: SWITCH PARENTESE_ESQUERDA . valor PARENTESE_DIREITA case_stmt default END_SWITCH

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    valor       go to state 146
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 133

   42 if_stmt: IF PARENTESE_ESQUERDA . valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    valor       go to state 147
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 134

   23 print: PRINTF PARENTESE_ESQUERDA . ids types_args PARENTESE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    ids         go to state 148
    expressoes  go to state 149
    vetorial    go to state 49
    id          go to state 50


state 135

   24 scan: SCANF PARENTESE_ESQUERDA . ids types_args PARENTESE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    ids         go to state 150
    expressoes  go to state 149
    vetorial    go to state 49
    id          go to state 50


state 136

   35 invoca_procedimento: ID PARENTESE_ESQUERDA . parametros PARENTESE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    parametros  go to state 151
    expressoes  go to state 152
    vetorial    go to state 49
    id          go to state 50


state 137

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END . ID

    ID  shift, and go to state 153


state 138

   14 stmt: decl PONTO_E_VIRGULA .

    $default  reduce using rule 14 (stmt)


state 139

    6 stmts: stmt stmts .

    $default  reduce using rule 6 (stmts)


state 140

   21 stmt: print PONTO_E_VIRGULA .

    $default  reduce using rule 21 (stmt)


state 141

   22 stmt: scan PONTO_E_VIRGULA .

    $default  reduce using rule 22 (stmt)


state 142

   19 stmt: invoca_procedimento PONTO_E_VIRGULA .

    $default  reduce using rule 19 (stmt)


state 143

   18 stmt: atribuicoes PONTO_E_VIRGULA .

    $default  reduce using rule 18 (stmt)


state 144

   41 for_stmt: FOR PARENTESE_ESQUERDA decl . PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    PONTO_E_VIRGULA  shift, and go to state 154


state 145

   40 while_stmt: WHILE PARENTESE_ESQUERDA valor . PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_DIREITA  shift, and go to state 155


state 146

   47 switch_stmt: SWITCH PARENTESE_ESQUERDA valor . PARENTESE_DIREITA case_stmt default END_SWITCH

    PARENTESE_DIREITA  shift, and go to state 156


state 147

   42 if_stmt: IF PARENTESE_ESQUERDA valor . PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_DIREITA  shift, and go to state 157


state 148

   23 print: PRINTF PARENTESE_ESQUERDA ids . types_args PARENTESE_DIREITA
   26 ids: ids . VIRGULA expressoes

    VIRGULA  shift, and go to state 158

    $default  reduce using rule 27 (types_args)

    types_args   go to state 159
    prints_list  go to state 160


state 149

   25 ids: expressoes .

    $default  reduce using rule 25 (ids)


state 150

   24 scan: SCANF PARENTESE_ESQUERDA ids . types_args PARENTESE_DIREITA
   26 ids: ids . VIRGULA expressoes

    VIRGULA  shift, and go to state 158

    $default  reduce using rule 27 (types_args)

    types_args   go to state 161
    prints_list  go to state 160


state 151

   35 invoca_procedimento: ID PARENTESE_ESQUERDA parametros . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 162


state 152

   36 parametros: expressoes .
   37           | expressoes . VIRGULA parametros

    VIRGULA  shift, and go to state 163

    $default  reduce using rule 36 (parametros)


state 153

  105 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID .

    $default  reduce using rule 105 (funcao)


state 154

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA . valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    valor       go to state 164
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 155

   40 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA . stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 165
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 156

   47 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA . case_stmt default END_SWITCH

    CASE  shift, and go to state 166

    case_stmt  go to state 167
    case       go to state 168


state 157

   42 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA . THEN stmts elses_opcoes END_IF

    THEN  shift, and go to state 169


state 158

   26 ids: ids VIRGULA . expressoes
   29 prints_list: VIRGULA . tipos_prints
   30            | VIRGULA . tipos_prints prints_list

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    PRINT_INT           shift, and go to state 170
    PRINT_FLOAT         shift, and go to state 171
    PRINT_CHAR          shift, and go to state 172
    PRINT_STRING        shift, and go to state 173
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    tipos_prints  go to state 174
    expressoes    go to state 175
    vetorial      go to state 49
    id            go to state 50


state 159

   23 print: PRINTF PARENTESE_ESQUERDA ids types_args . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 176


state 160

   28 types_args: prints_list .

    $default  reduce using rule 28 (types_args)


state 161

   24 scan: SCANF PARENTESE_ESQUERDA ids types_args . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 177


state 162

   35 invoca_procedimento: ID PARENTESE_ESQUERDA parametros PARENTESE_DIREITA .

    $default  reduce using rule 35 (invoca_procedimento)


state 163

   37 parametros: expressoes VIRGULA . parametros

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    parametros  go to state 178
    expressoes  go to state 152
    vetorial    go to state 49
    id          go to state 50


state 164

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor . PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    PONTO_E_VIRGULA  shift, and go to state 179


state 165

   40 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts . END_WHILE

    END_WHILE  shift, and go to state 180


state 166

   52 case: CASE . PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS stmts

    PARENTESE_ESQUERDA  shift, and go to state 181


state 167

   47 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt . default END_SWITCH

    DEFAULT  shift, and go to state 182

    $default  reduce using rule 48 (default)

    default  go to state 183


state 168

   50 case_stmt: case .
   51          | case . case_stmt

    CASE  shift, and go to state 166

    $default  reduce using rule 50 (case_stmt)

    case_stmt  go to state 184
    case       go to state 168


state 169

   42 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN . stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 185
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 170

   31 tipos_prints: PRINT_INT .

    $default  reduce using rule 31 (tipos_prints)


state 171

   32 tipos_prints: PRINT_FLOAT .

    $default  reduce using rule 32 (tipos_prints)


state 172

   33 tipos_prints: PRINT_CHAR .

    $default  reduce using rule 33 (tipos_prints)


state 173

   34 tipos_prints: PRINT_STRING .

    $default  reduce using rule 34 (tipos_prints)


state 174

   29 prints_list: VIRGULA tipos_prints .
   30            | VIRGULA tipos_prints . prints_list

    VIRGULA  shift, and go to state 186

    $default  reduce using rule 29 (prints_list)

    prints_list  go to state 187


state 175

   26 ids: ids VIRGULA expressoes .

    $default  reduce using rule 26 (ids)


state 176

   23 print: PRINTF PARENTESE_ESQUERDA ids types_args PARENTESE_DIREITA .

    $default  reduce using rule 23 (print)


state 177

   24 scan: SCANF PARENTESE_ESQUERDA ids types_args PARENTESE_DIREITA .

    $default  reduce using rule 24 (scan)


state 178

   37 parametros: expressoes VIRGULA parametros .

    $default  reduce using rule 37 (parametros)


state 179

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA . atribuicoes PARENTESE_DIREITA stmts END_FOR

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 34

    atribuicoes          go to state 188
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    vars                 go to state 128
    id                   go to state 129


state 180

   40 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE .

    $default  reduce using rule 40 (while_stmt)


state 181

   52 case: CASE PARENTESE_ESQUERDA . id PARENTESE_DIREITA DOIS_PONTOS stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    id  go to state 189


state 182

   49 default: DEFAULT . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 190
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 183

   47 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default . END_SWITCH

    END_SWITCH  shift, and go to state 191


state 184

   51 case_stmt: case case_stmt .

    $default  reduce using rule 51 (case_stmt)


state 185

   42 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts . elses_opcoes END_IF

    ELSE  shift, and go to state 192

    $default  reduce using rule 44 (elses_opcoes)

    elses_opcoes  go to state 193


state 186

   29 prints_list: VIRGULA . tipos_prints
   30            | VIRGULA . tipos_prints prints_list

    PRINT_INT     shift, and go to state 170
    PRINT_FLOAT   shift, and go to state 171
    PRINT_CHAR    shift, and go to state 172
    PRINT_STRING  shift, and go to state 173

    tipos_prints  go to state 174


state 187

   30 prints_list: VIRGULA tipos_prints prints_list .

    $default  reduce using rule 30 (prints_list)


state 188

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes . PARENTESE_DIREITA stmts END_FOR

    PARENTESE_DIREITA  shift, and go to state 194


state 189

   52 case: CASE PARENTESE_ESQUERDA id . PARENTESE_DIREITA DOIS_PONTOS stmts

    PARENTESE_DIREITA  shift, and go to state 195


state 190

   49 default: DEFAULT stmts .

    $default  reduce using rule 49 (default)


state 191

   47 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default END_SWITCH .

    $default  reduce using rule 47 (switch_stmt)


state 192

   45 elses_opcoes: ELSE . THEN stmts
   46             | ELSE . if_stmt_in_else

    IF    shift, and go to state 196
    THEN  shift, and go to state 197

    if_stmt_in_else  go to state 198


state 193

   42 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes . END_IF

    END_IF  shift, and go to state 199


state 194

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA . stmts END_FOR

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 200
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 195

   52 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA . DOIS_PONTOS stmts

    DOIS_PONTOS  shift, and go to state 201


state 196

   43 if_stmt_in_else: IF . PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes

    PARENTESE_ESQUERDA  shift, and go to state 202


state 197

   45 elses_opcoes: ELSE THEN . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 203
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 198

   46 elses_opcoes: ELSE if_stmt_in_else .

    $default  reduce using rule 46 (elses_opcoes)


state 199

   42 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF .

    $default  reduce using rule 42 (if_stmt)


state 200

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts . END_FOR

    END_FOR  shift, and go to state 204


state 201

   52 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 205
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 202

   43 if_stmt_in_else: IF PARENTESE_ESQUERDA . valor PARENTESE_DIREITA THEN stmts elses_opcoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 90 (expressoes)

    valor       go to state 206
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 203

   45 elses_opcoes: ELSE THEN stmts .

    $default  reduce using rule 45 (elses_opcoes)


state 204

   41 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR .

    $default  reduce using rule 41 (for_stmt)


state 205

   52 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS stmts .

    $default  reduce using rule 52 (case)


state 206

   43 if_stmt_in_else: IF PARENTESE_ESQUERDA valor . PARENTESE_DIREITA THEN stmts elses_opcoes

    PARENTESE_DIREITA  shift, and go to state 207


state 207

   43 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA . THEN stmts elses_opcoes

    THEN  shift, and go to state 208


state 208

   43 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN . stmts elses_opcoes

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 110
    WHILE               shift, and go to state 111
    SWITCH              shift, and go to state 112
    IF                  shift, and go to state 113
    PRINTF              shift, and go to state 114
    SCANF               shift, and go to state 115
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 116

    stmts                go to state 209
    decl                 go to state 118
    stmt                 go to state 119
    print                go to state 120
    scan                 go to state 121
    invoca_procedimento  go to state 122
    while_stmt           go to state 123
    for_stmt             go to state 124
    if_stmt              go to state 125
    switch_stmt          go to state 126
    atribuicoes          go to state 127
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 128
    id                   go to state 129


state 209

   43 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts . elses_opcoes

    ELSE  shift, and go to state 192

    $default  reduce using rule 44 (elses_opcoes)

    elses_opcoes  go to state 210


state 210

   43 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes .

    $default  reduce using rule 43 (if_stmt_in_else)
