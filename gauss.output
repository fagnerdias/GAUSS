Nonterminals useless in grammar

   operador


Terminals unused in grammar

   CHAVE_ESQUERDA
   CHAVE_DIREITA
   PONTO
   DOIS_PONTOS
   E_LOGICO
   E_LOGICO_CURTO_CIRCUITO
   OU_LOGICO
   OU_LOGICO_CURTO_CIRCUITO
   EXCLAMACAO
   ASTERISCO
   PRINT_INT
   PRINT_FLOAT
   PRINT_CHAR
   PRINT_STRING
   MODULO
   BARRA
   MAIS
   MENOS_UNARIO
   EXPONENCIACAO
   OPERADOR_TERNARIO
   MENOR_QUE
   MAIOR_QUE
   MENOR_OU_IGUAL_A
   MAIOR_OU_IGUAL_A
   IGUAL_A
   DIFERENTE_DE
   FOR
   END_FOR
   DO
   WHILE
   END_WHILE
   SWITCH
   END_SWITCH
   CASE
   END_CASE
   DEFAULT
   IF
   END_IF
   ELSE
   ELSEIF
   THEN
   STRUCT
   PROC
   CONSTANTE
   PRINTF
   SCANF
   TRUE
   FALSE
   JUMP
   BREAK
   TNULL
   LITERAL_QUALQUER


Rules useless in grammar

   41 operador: MAIS
   42         | MENOS_UNARIO
   43         | EXPONENCIACAO


Grammar

    0 $accept: prog $end

    1 prog: subprog stmts

    2 subprog: funcao
    3        | subprog funcao

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    5 args: type id
    6     | type id COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
    7     | type id VIRGULA args

    8 stmts: stmt PONTO_E_VIRGULA
    9      | stmt PONTO_E_VIRGULA stmts

   10 stmt: decl
   11     | atribuicoes

   12 decl: type id
   13     | type vars

   14 atribuicoes: atribuicao_simples
   15            | atribuicao_unaria
   16            | atribuicao_composta
   17            | atribuicao_paralela

   18 type: CARACTERE
   19     | STRING
   20     | INTEIRO
   21     | FLOAT
   22     | DOUBLE
   23     | VOID
   24     | BOOLEANO

   25 vars: /* empty */
   26     | id VIRGULA vars

   27 atribuicao_simples: id ATRIBUICAO id

   28 atribuicao_unaria: id operador_unario
   29                  | operador_unario id

   30 atribuicao_composta: id operador_composto id

   31 atribuicao_paralela: vars ATRIBUICAO vars

   32 operador_unario: INCREMENTO
   33                | DECREMENTO

   34 operador_composto: MAIS_IGUAL
   35                  | MENOS_IGUAL
   36                  | VEZES_IGUAL
   37                  | DIV_IGUAL
   38                  | EXPONENCIACAO_IGUAL

   39 id: ID
   40   | DIGITO


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAVE_ESQUERDA (258)
CHAVE_DIREITA (259)
PARENTESE_ESQUERDA (260) 4
PARENTESE_DIREITA (261) 4
COLCHETE_ESQUERDA (262) 6
COLCHETE_DIREITA (263) 6
PONTO_E_VIRGULA (264) 8 9
VIRGULA (265) 6 7 26
PONTO (266)
DOIS_PONTOS (267)
E_LOGICO (268)
E_LOGICO_CURTO_CIRCUITO (269)
OU_LOGICO (270)
OU_LOGICO_CURTO_CIRCUITO (271)
EXCLAMACAO (272)
ASTERISCO (273)
PRINT_INT (274)
PRINT_FLOAT (275)
PRINT_CHAR (276)
PRINT_STRING (277)
MODULO (278)
BARRA (279)
INCREMENTO (280) 32
DECREMENTO (281) 33
MAIS (282)
MENOS_UNARIO (283)
EXPONENCIACAO (284)
ATRIBUICAO (285) 27 31
OPERADOR_TERNARIO (286)
MENOR_QUE (287)
MAIOR_QUE (288)
MENOR_OU_IGUAL_A (289)
MAIOR_OU_IGUAL_A (290)
IGUAL_A (291)
DIFERENTE_DE (292)
MAIS_IGUAL (293) 34
MENOS_IGUAL (294) 35
VEZES_IGUAL (295) 36
DIV_IGUAL (296) 37
EXPONENCIACAO_IGUAL (297) 38
FOR (298)
END_FOR (299)
DO (300)
WHILE (301)
END_WHILE (302)
SWITCH (303)
END_SWITCH (304)
CASE (305)
END_CASE (306)
DEFAULT (307)
IF (308)
END_IF (309)
ELSE (310)
ELSEIF (311)
THEN (312)
STRUCT (313)
IS (314) 4
END (315) 4
FUNCAO (316) 4
PROC (317)
RETURN (318) 4
TBEGIN (319) 4
CONSTANTE (320)
PRINTF (321)
SCANF (322)
CARACTERE (323) 18
STRING (324) 19
INTEIRO (325) 20
FLOAT (326) 21
DOUBLE (327) 22
VOID (328) 23
BOOLEANO (329) 24
TRUE (330)
FALSE (331)
JUMP (332)
BREAK (333)
TNULL (334)
DIGITO (335) 40
ID (336) 4 39
LITERAL_QUALQUER (337)


Nonterminals, with rules where they appear

$accept (83)
    on left: 0
prog (84)
    on left: 1, on right: 0
subprog (85)
    on left: 2 3, on right: 1 3
funcao (86)
    on left: 4, on right: 2 3
args (87)
    on left: 5 6 7, on right: 4 6 7
stmts (88)
    on left: 8 9, on right: 1 4 9
stmt (89)
    on left: 10 11, on right: 8 9
decl (90)
    on left: 12 13, on right: 10
atribuicoes (91)
    on left: 14 15 16 17, on right: 11
type (92)
    on left: 18 19 20 21 22 23 24, on right: 4 5 6 7 12 13
vars (93)
    on left: 25 26, on right: 13 26 31
atribuicao_simples (94)
    on left: 27, on right: 14
atribuicao_unaria (95)
    on left: 28 29, on right: 15
atribuicao_composta (96)
    on left: 30, on right: 16
atribuicao_paralela (97)
    on left: 31, on right: 17
operador_unario (98)
    on left: 32 33, on right: 28 29
operador_composto (99)
    on left: 34 35 36 37 38, on right: 30
id (100)
    on left: 39 40, on right: 5 6 7 12 26 27 28 29 30


state 0

    0 $accept: . prog $end

    FUNCAO  shift, and go to state 1

    prog     go to state 2
    subprog  go to state 3
    funcao   go to state 4


state 1

    4 funcao: FUNCAO . ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    ID  shift, and go to state 5


state 2

    0 $accept: prog . $end

    $end  shift, and go to state 6


state 3

    1 prog: subprog . stmts
    3 subprog: subprog . funcao

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    FUNCAO      shift, and go to state 1
    CARACTERE   shift, and go to state 9
    STRING      shift, and go to state 10
    INTEIRO     shift, and go to state 11
    FLOAT       shift, and go to state 12
    DOUBLE      shift, and go to state 13
    VOID        shift, and go to state 14
    BOOLEANO    shift, and go to state 15
    DIGITO      shift, and go to state 16
    ID          shift, and go to state 17

    $default  reduce using rule 25 (vars)

    funcao               go to state 18
    stmts                go to state 19
    stmt                 go to state 20
    decl                 go to state 21
    atribuicoes          go to state 22
    type                 go to state 23
    vars                 go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    id                   go to state 30


state 4

    2 subprog: funcao .

    $default  reduce using rule 2 (subprog)


state 5

    4 funcao: FUNCAO ID . PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    PARENTESE_ESQUERDA  shift, and go to state 31


state 6

    0 $accept: prog $end .

    $default  accept


state 7

   32 operador_unario: INCREMENTO .

    $default  reduce using rule 32 (operador_unario)


state 8

   33 operador_unario: DECREMENTO .

    $default  reduce using rule 33 (operador_unario)


state 9

   18 type: CARACTERE .

    $default  reduce using rule 18 (type)


state 10

   19 type: STRING .

    $default  reduce using rule 19 (type)


state 11

   20 type: INTEIRO .

    $default  reduce using rule 20 (type)


state 12

   21 type: FLOAT .

    $default  reduce using rule 21 (type)


state 13

   22 type: DOUBLE .

    $default  reduce using rule 22 (type)


state 14

   23 type: VOID .

    $default  reduce using rule 23 (type)


state 15

   24 type: BOOLEANO .

    $default  reduce using rule 24 (type)


state 16

   40 id: DIGITO .

    $default  reduce using rule 40 (id)


state 17

   39 id: ID .

    $default  reduce using rule 39 (id)


state 18

    3 subprog: subprog funcao .

    $default  reduce using rule 3 (subprog)


state 19

    1 prog: subprog stmts .

    $default  reduce using rule 1 (prog)


state 20

    8 stmts: stmt . PONTO_E_VIRGULA
    9      | stmt . PONTO_E_VIRGULA stmts

    PONTO_E_VIRGULA  shift, and go to state 32


state 21

   10 stmt: decl .

    $default  reduce using rule 10 (stmt)


state 22

   11 stmt: atribuicoes .

    $default  reduce using rule 11 (stmt)


state 23

   12 decl: type . id
   13     | type . vars

    DIGITO  shift, and go to state 16
    ID      shift, and go to state 17

    $default  reduce using rule 25 (vars)

    vars  go to state 33
    id    go to state 34


state 24

   31 atribuicao_paralela: vars . ATRIBUICAO vars

    ATRIBUICAO  shift, and go to state 35


state 25

   14 atribuicoes: atribuicao_simples .

    $default  reduce using rule 14 (atribuicoes)


state 26

   15 atribuicoes: atribuicao_unaria .

    $default  reduce using rule 15 (atribuicoes)


state 27

   16 atribuicoes: atribuicao_composta .

    $default  reduce using rule 16 (atribuicoes)


state 28

   17 atribuicoes: atribuicao_paralela .

    $default  reduce using rule 17 (atribuicoes)


state 29

   29 atribuicao_unaria: operador_unario . id

    DIGITO  shift, and go to state 16
    ID      shift, and go to state 17

    id  go to state 36


state 30

   26 vars: id . VIRGULA vars
   27 atribuicao_simples: id . ATRIBUICAO id
   28 atribuicao_unaria: id . operador_unario
   30 atribuicao_composta: id . operador_composto id

    VIRGULA              shift, and go to state 37
    INCREMENTO           shift, and go to state 7
    DECREMENTO           shift, and go to state 8
    ATRIBUICAO           shift, and go to state 38
    MAIS_IGUAL           shift, and go to state 39
    MENOS_IGUAL          shift, and go to state 40
    VEZES_IGUAL          shift, and go to state 41
    DIV_IGUAL            shift, and go to state 42
    EXPONENCIACAO_IGUAL  shift, and go to state 43

    operador_unario    go to state 44
    operador_composto  go to state 45


state 31

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA . args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    CARACTERE  shift, and go to state 9
    STRING     shift, and go to state 10
    INTEIRO    shift, and go to state 11
    FLOAT      shift, and go to state 12
    DOUBLE     shift, and go to state 13
    VOID       shift, and go to state 14
    BOOLEANO   shift, and go to state 15

    args  go to state 46
    type  go to state 47


state 32

    8 stmts: stmt PONTO_E_VIRGULA .
    9      | stmt PONTO_E_VIRGULA . stmts

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    CARACTERE   shift, and go to state 9
    STRING      shift, and go to state 10
    INTEIRO     shift, and go to state 11
    FLOAT       shift, and go to state 12
    DOUBLE      shift, and go to state 13
    VOID        shift, and go to state 14
    BOOLEANO    shift, and go to state 15
    DIGITO      shift, and go to state 16
    ID          shift, and go to state 17

    ATRIBUICAO  reduce using rule 25 (vars)
    $default    reduce using rule 8 (stmts)

    stmts                go to state 48
    stmt                 go to state 20
    decl                 go to state 21
    atribuicoes          go to state 22
    type                 go to state 23
    vars                 go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    id                   go to state 30


state 33

   13 decl: type vars .

    $default  reduce using rule 13 (decl)


state 34

   12 decl: type id .
   26 vars: id . VIRGULA vars

    VIRGULA  shift, and go to state 37

    $default  reduce using rule 12 (decl)


state 35

   31 atribuicao_paralela: vars ATRIBUICAO . vars

    DIGITO  shift, and go to state 16
    ID      shift, and go to state 17

    $default  reduce using rule 25 (vars)

    vars  go to state 49
    id    go to state 50


state 36

   29 atribuicao_unaria: operador_unario id .

    $default  reduce using rule 29 (atribuicao_unaria)


state 37

   26 vars: id VIRGULA . vars

    DIGITO  shift, and go to state 16
    ID      shift, and go to state 17

    $default  reduce using rule 25 (vars)

    vars  go to state 51
    id    go to state 50


state 38

   27 atribuicao_simples: id ATRIBUICAO . id

    DIGITO  shift, and go to state 16
    ID      shift, and go to state 17

    id  go to state 52


state 39

   34 operador_composto: MAIS_IGUAL .

    $default  reduce using rule 34 (operador_composto)


state 40

   35 operador_composto: MENOS_IGUAL .

    $default  reduce using rule 35 (operador_composto)


state 41

   36 operador_composto: VEZES_IGUAL .

    $default  reduce using rule 36 (operador_composto)


state 42

   37 operador_composto: DIV_IGUAL .

    $default  reduce using rule 37 (operador_composto)


state 43

   38 operador_composto: EXPONENCIACAO_IGUAL .

    $default  reduce using rule 38 (operador_composto)


state 44

   28 atribuicao_unaria: id operador_unario .

    $default  reduce using rule 28 (atribuicao_unaria)


state 45

   30 atribuicao_composta: id operador_composto . id

    DIGITO  shift, and go to state 16
    ID      shift, and go to state 17

    id  go to state 53


state 46

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args . PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    PARENTESE_DIREITA  shift, and go to state 54


state 47

    5 args: type . id
    6     | type . id COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
    7     | type . id VIRGULA args

    DIGITO  shift, and go to state 16
    ID      shift, and go to state 17

    id  go to state 55


state 48

    9 stmts: stmt PONTO_E_VIRGULA stmts .

    $default  reduce using rule 9 (stmts)


state 49

   31 atribuicao_paralela: vars ATRIBUICAO vars .

    $default  reduce using rule 31 (atribuicao_paralela)


state 50

   26 vars: id . VIRGULA vars

    VIRGULA  shift, and go to state 37


state 51

   26 vars: id VIRGULA vars .

    $default  reduce using rule 26 (vars)


state 52

   27 atribuicao_simples: id ATRIBUICAO id .

    $default  reduce using rule 27 (atribuicao_simples)


state 53

   30 atribuicao_composta: id operador_composto id .

    $default  reduce using rule 30 (atribuicao_composta)


state 54

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA . RETURN type IS TBEGIN stmts END ID

    RETURN  shift, and go to state 56


state 55

    5 args: type id .
    6     | type id . COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
    7     | type id . VIRGULA args

    COLCHETE_ESQUERDA  shift, and go to state 57
    VIRGULA            shift, and go to state 58

    $default  reduce using rule 5 (args)


state 56

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN . type IS TBEGIN stmts END ID

    CARACTERE  shift, and go to state 9
    STRING     shift, and go to state 10
    INTEIRO    shift, and go to state 11
    FLOAT      shift, and go to state 12
    DOUBLE     shift, and go to state 13
    VOID       shift, and go to state 14
    BOOLEANO   shift, and go to state 15

    type  go to state 59


state 57

    6 args: type id COLCHETE_ESQUERDA . COLCHETE_DIREITA VIRGULA args

    COLCHETE_DIREITA  shift, and go to state 60


state 58

    7 args: type id VIRGULA . args

    CARACTERE  shift, and go to state 9
    STRING     shift, and go to state 10
    INTEIRO    shift, and go to state 11
    FLOAT      shift, and go to state 12
    DOUBLE     shift, and go to state 13
    VOID       shift, and go to state 14
    BOOLEANO   shift, and go to state 15

    args  go to state 61
    type  go to state 47


state 59

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type . IS TBEGIN stmts END ID

    IS  shift, and go to state 62


state 60

    6 args: type id COLCHETE_ESQUERDA COLCHETE_DIREITA . VIRGULA args

    VIRGULA  shift, and go to state 63


state 61

    7 args: type id VIRGULA args .

    $default  reduce using rule 7 (args)


state 62

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS . TBEGIN stmts END ID

    TBEGIN  shift, and go to state 64


state 63

    6 args: type id COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA . args

    CARACTERE  shift, and go to state 9
    STRING     shift, and go to state 10
    INTEIRO    shift, and go to state 11
    FLOAT      shift, and go to state 12
    DOUBLE     shift, and go to state 13
    VOID       shift, and go to state 14
    BOOLEANO   shift, and go to state 15

    args  go to state 65
    type  go to state 47


state 64

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN . stmts END ID

    INCREMENTO  shift, and go to state 7
    DECREMENTO  shift, and go to state 8
    CARACTERE   shift, and go to state 9
    STRING      shift, and go to state 10
    INTEIRO     shift, and go to state 11
    FLOAT       shift, and go to state 12
    DOUBLE      shift, and go to state 13
    VOID        shift, and go to state 14
    BOOLEANO    shift, and go to state 15
    DIGITO      shift, and go to state 16
    ID          shift, and go to state 17

    $default  reduce using rule 25 (vars)

    stmts                go to state 66
    stmt                 go to state 20
    decl                 go to state 21
    atribuicoes          go to state 22
    type                 go to state 23
    vars                 go to state 24
    atribuicao_simples   go to state 25
    atribuicao_unaria    go to state 26
    atribuicao_composta  go to state 27
    atribuicao_paralela  go to state 28
    operador_unario      go to state 29
    id                   go to state 30


state 65

    6 args: type id COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args .

    $default  reduce using rule 6 (args)


state 66

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts . END ID

    END  shift, and go to state 67


state 67

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END . ID

    ID  shift, and go to state 68


state 68

    4 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID .

    $default  reduce using rule 4 (funcao)
