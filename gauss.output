Terminals unused in grammar

   PONTO
   E_LOGICO_CURTO_CIRCUITO
   OU_LOGICO
   OU_LOGICO_CURTO_CIRCUITO
   EXCLAMACAO
   ASTERISCO
   PRINT_INT
   PRINT_FLOAT
   PRINT_CHAR
   PRINT_STRING
   OPERADOR_TERNARIO
   DO
   END_CASE
   ELSEIF
   PROC
   CONSTANTE
   PRINTF
   SCANF
   TRUE
   FALSE
   JUMP
   BREAK
   TNULL
   LITERAL_QUALQUER


Grammar

    0 $accept: prog $end

    1 prog: subprog
    2     | struct_list subprog

    3 subprog: funcao
    4        | subprog funcao

    5 stmts: stmt
    6      | stmt stmts

    7 decl: type id
    8     | type vars
    9     | type vars decl
   10     | type atribuicoes

   11 struct_list: struct
   12            | struct struct_list

   13 struct: STRUCT ID IS decl_list ENDSTRUCT

   14 stmt: decl PONTO_E_VIRGULA
   15     | if_stmt
   16     | while_stmt
   17     | for_stmt
   18     | atribuicoes PONTO_E_VIRGULA
   19     | invoca_procedimento PONTO_E_VIRGULA
   20     | switch_stmt

   21 invoca_procedimento: ID PARENTESE_ESQUERDA parametros PARENTESE_DIREITA

   22 parametros: expressoes
   23           | expressoes VIRGULA parametros

   24 decl_list: decl PONTO_E_VIRGULA
   25          | decl PONTO_E_VIRGULA decl_list

   26 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

   28 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

   29 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes

   30 elses_opcoes: /* empty */
   31             | ELSE THEN stmts
   32             | ELSE if_stmt_in_else

   33 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default END_SWITCH

   34 default: /* empty */
   35        | DEFAULT stmts

   36 case_stmt: case
   37          | case case_stmt

   38 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS stmts

   39 atribuicoes: atribuicao_simples
   40            | atribuicao_unaria
   41            | atribuicao_composta
   42            | atribuicao_paralela

   43 atribuicao_simples: id ATRIBUICAO expressoes

   44 atribuicao_unaria: id operador_unario
   45                  | operador_unario ID

   46 atribuicao_composta: id operador_composto valor

   47 atribuicao_paralela: vars ATRIBUICAO expressoes_list

   48 operador_unario: INCREMENTO
   49                | DECREMENTO

   50 operador: MAIS
   51         | MENOS_UNARIO
   52         | EXPONENCIACAO
   53         | BARRA
   54         | MODULO

   55 operador_comp: MENOR_QUE
   56              | MAIOR_QUE
   57              | MENOR_OU_IGUAL_A
   58              | MAIOR_OU_IGUAL_A
   59              | IGUAL_A
   60              | DIFERENTE_DE

   61 operador_composto: MAIS_IGUAL
   62                  | MENOS_IGUAL
   63                  | VEZES_IGUAL
   64                  | DIV_IGUAL
   65                  | EXPONENCIACAO_IGUAL

   66 type: CARACTERE
   67     | STRING
   68     | INTEIRO
   69     | FLOAT
   70     | DOUBLE
   71     | VOID
   72     | BOOLEANO

   73 valor: expressoes E_LOGICO expressoes
   74      | expressoes

   75 expressoes: /* empty */
   76           | id
   77           | id operador id
   78           | id operador_comp id
   79           | vetorial

   80 vetorial: CHAVE_ESQUERDA lista_de_digitos CHAVE_DIREITA

   81 lista_de_digitos: DIGITO
   82                 | DIGITO VIRGULA lista_de_digitos

   83 expressoes_list: expressoes VIRGULA expressoes

   84 vars: ID VIRGULA ID
   85     | ID VIRGULA vars

   86 args: /* empty */
   87     | type ID
   88     | type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   89     | type ID VIRGULA args

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

   91 id: ID
   92   | DIGITO
   93   | ID COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA
   94   | PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA


Terminals, with rules where they appear

$end (0) 0
error (256)
CHAVE_ESQUERDA (258) 80
CHAVE_DIREITA (259) 80
PARENTESE_ESQUERDA (260) 21 26 27 28 29 33 38 90 94
PARENTESE_DIREITA (261) 21 26 27 28 29 33 38 90 94
COLCHETE_ESQUERDA (262) 88 93
COLCHETE_DIREITA (263) 88 93
PONTO_E_VIRGULA (264) 14 18 19 24 25 27
VIRGULA (265) 23 82 83 84 85 88 89
PONTO (266)
DOIS_PONTOS (267) 38
E_LOGICO (268) 73
E_LOGICO_CURTO_CIRCUITO (269)
OU_LOGICO (270)
OU_LOGICO_CURTO_CIRCUITO (271)
EXCLAMACAO (272)
ASTERISCO (273)
PRINT_INT (274)
PRINT_FLOAT (275)
PRINT_CHAR (276)
PRINT_STRING (277)
MODULO (278) 54
BARRA (279) 53
INCREMENTO (280) 48
DECREMENTO (281) 49
MAIS (282) 50
MENOS_UNARIO (283) 51
EXPONENCIACAO (284) 52
ATRIBUICAO (285) 43 47
OPERADOR_TERNARIO (286)
MENOR_QUE (287) 55
MAIOR_QUE (288) 56
MENOR_OU_IGUAL_A (289) 57
MAIOR_OU_IGUAL_A (290) 58
IGUAL_A (291) 59
DIFERENTE_DE (292) 60
MAIS_IGUAL (293) 61
MENOS_IGUAL (294) 62
VEZES_IGUAL (295) 63
DIV_IGUAL (296) 64
EXPONENCIACAO_IGUAL (297) 65
FOR (298) 27
END_FOR (299) 27
DO (300)
WHILE (301) 26
END_WHILE (302) 26
SWITCH (303) 33
END_SWITCH (304) 33
CASE (305) 38
END_CASE (306)
DEFAULT (307) 35
IF (308) 28 29
END_IF (309) 28
ELSE (310) 31 32
ELSEIF (311)
THEN (312) 28 29 31
STRUCT (313) 13
ENDSTRUCT (314) 13
IS (315) 13 90
END (316) 90
FUNCAO (317) 90
PROC (318)
RETURN (319) 90
TBEGIN (320) 90
CONSTANTE (321)
PRINTF (322)
SCANF (323)
CARACTERE (324) 66
STRING (325) 67
INTEIRO (326) 68
FLOAT (327) 69
DOUBLE (328) 70
VOID (329) 71
BOOLEANO (330) 72
TRUE (331)
FALSE (332)
JUMP (333)
BREAK (334)
TNULL (335)
DIGITO (336) 81 82 92
ID (337) 13 21 45 84 85 87 88 89 90 91 93
LITERAL_QUALQUER (338)


Nonterminals, with rules where they appear

$accept (84)
    on left: 0
prog (85)
    on left: 1 2, on right: 0
subprog (86)
    on left: 3 4, on right: 1 2 4
stmts (87)
    on left: 5 6, on right: 6 26 27 28 29 31 35 38 90
decl (88)
    on left: 7 8 9 10, on right: 9 14 24 25 27
struct_list (89)
    on left: 11 12, on right: 2 12
struct (90)
    on left: 13, on right: 11 12
stmt (91)
    on left: 14 15 16 17 18 19 20, on right: 5 6
invoca_procedimento (92)
    on left: 21, on right: 19
parametros (93)
    on left: 22 23, on right: 21 23
decl_list (94)
    on left: 24 25, on right: 13 25
while_stmt (95)
    on left: 26, on right: 16
for_stmt (96)
    on left: 27, on right: 17
if_stmt (97)
    on left: 28, on right: 15
if_stmt_in_else (98)
    on left: 29, on right: 32
elses_opcoes (99)
    on left: 30 31 32, on right: 28 29
switch_stmt (100)
    on left: 33, on right: 20
default (101)
    on left: 34 35, on right: 33
case_stmt (102)
    on left: 36 37, on right: 33 37
case (103)
    on left: 38, on right: 36 37
atribuicoes (104)
    on left: 39 40 41 42, on right: 10 18 27
atribuicao_simples (105)
    on left: 43, on right: 39
atribuicao_unaria (106)
    on left: 44 45, on right: 40
atribuicao_composta (107)
    on left: 46, on right: 41
atribuicao_paralela (108)
    on left: 47, on right: 42
operador_unario (109)
    on left: 48 49, on right: 44 45
operador (110)
    on left: 50 51 52 53 54, on right: 77
operador_comp (111)
    on left: 55 56 57 58 59 60, on right: 78
operador_composto (112)
    on left: 61 62 63 64 65, on right: 46
type (113)
    on left: 66 67 68 69 70 71 72, on right: 7 8 9 10 87 88 89 90
valor (114)
    on left: 73 74, on right: 26 27 28 29 33 46
expressoes (115)
    on left: 75 76 77 78 79, on right: 22 23 43 73 74 83 93 94
vetorial (116)
    on left: 80, on right: 79
lista_de_digitos (117)
    on left: 81 82, on right: 80 82
expressoes_list (118)
    on left: 83, on right: 47
vars (119)
    on left: 84 85, on right: 8 9 47 85
args (120)
    on left: 86 87 88 89, on right: 88 89 90
funcao (121)
    on left: 90, on right: 3 4
id (122)
    on left: 91 92 93 94, on right: 7 38 43 44 46 76 77 78


state 0

    0 $accept: . prog $end

    STRUCT  shift, and go to state 1
    FUNCAO  shift, and go to state 2

    prog         go to state 3
    subprog      go to state 4
    struct_list  go to state 5
    struct       go to state 6
    funcao       go to state 7


state 1

   13 struct: STRUCT . ID IS decl_list ENDSTRUCT

    ID  shift, and go to state 8


state 2

   90 funcao: FUNCAO . ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    ID  shift, and go to state 9


state 3

    0 $accept: prog . $end

    $end  shift, and go to state 10


state 4

    1 prog: subprog .
    4 subprog: subprog . funcao

    FUNCAO  shift, and go to state 2

    $default  reduce using rule 1 (prog)

    funcao  go to state 11


state 5

    2 prog: struct_list . subprog

    FUNCAO  shift, and go to state 2

    subprog  go to state 12
    funcao   go to state 7


state 6

   11 struct_list: struct .
   12            | struct . struct_list

    STRUCT  shift, and go to state 1

    $default  reduce using rule 11 (struct_list)

    struct_list  go to state 13
    struct       go to state 6


state 7

    3 subprog: funcao .

    $default  reduce using rule 3 (subprog)


state 8

   13 struct: STRUCT ID . IS decl_list ENDSTRUCT

    IS  shift, and go to state 14


state 9

   90 funcao: FUNCAO ID . PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    PARENTESE_ESQUERDA  shift, and go to state 15


state 10

    0 $accept: prog $end .

    $default  accept


state 11

    4 subprog: subprog funcao .

    $default  reduce using rule 4 (subprog)


state 12

    2 prog: struct_list subprog .
    4 subprog: subprog . funcao

    FUNCAO  shift, and go to state 2

    $default  reduce using rule 2 (prog)

    funcao  go to state 11


state 13

   12 struct_list: struct struct_list .

    $default  reduce using rule 12 (struct_list)


state 14

   13 struct: STRUCT ID IS . decl_list ENDSTRUCT

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    decl       go to state 23
    decl_list  go to state 24
    type       go to state 25


state 15

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA . args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 86 (args)

    type  go to state 26
    args  go to state 27


state 16

   66 type: CARACTERE .

    $default  reduce using rule 66 (type)


state 17

   67 type: STRING .

    $default  reduce using rule 67 (type)


state 18

   68 type: INTEIRO .

    $default  reduce using rule 68 (type)


state 19

   69 type: FLOAT .

    $default  reduce using rule 69 (type)


state 20

   70 type: DOUBLE .

    $default  reduce using rule 70 (type)


state 21

   71 type: VOID .

    $default  reduce using rule 71 (type)


state 22

   72 type: BOOLEANO .

    $default  reduce using rule 72 (type)


state 23

   24 decl_list: decl . PONTO_E_VIRGULA
   25          | decl . PONTO_E_VIRGULA decl_list

    PONTO_E_VIRGULA  shift, and go to state 28


state 24

   13 struct: STRUCT ID IS decl_list . ENDSTRUCT

    ENDSTRUCT  shift, and go to state 29


state 25

    7 decl: type . id
    8     | type . vars
    9     | type . vars decl
   10     | type . atribuicoes

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 34

    atribuicoes          go to state 35
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    vars                 go to state 41
    id                   go to state 42


state 26

   87 args: type . ID
   88     | type . ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   89     | type . ID VIRGULA args

    ID  shift, and go to state 43


state 27

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args . PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID

    PARENTESE_DIREITA  shift, and go to state 44


state 28

   24 decl_list: decl PONTO_E_VIRGULA .
   25          | decl PONTO_E_VIRGULA . decl_list

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 24 (decl_list)

    decl       go to state 23
    decl_list  go to state 45
    type       go to state 25


state 29

   13 struct: STRUCT ID IS decl_list ENDSTRUCT .

    $default  reduce using rule 13 (struct)


state 30

   94 id: PARENTESE_ESQUERDA . expressoes PARENTESE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    expressoes  go to state 48
    vetorial    go to state 49
    id          go to state 50


state 31

   48 operador_unario: INCREMENTO .

    $default  reduce using rule 48 (operador_unario)


state 32

   49 operador_unario: DECREMENTO .

    $default  reduce using rule 49 (operador_unario)


state 33

   92 id: DIGITO .

    $default  reduce using rule 92 (id)


state 34

   84 vars: ID . VIRGULA ID
   85     | ID . VIRGULA vars
   91 id: ID .
   93   | ID . COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA

    COLCHETE_ESQUERDA  shift, and go to state 51
    VIRGULA            shift, and go to state 52

    $default  reduce using rule 91 (id)


state 35

   10 decl: type atribuicoes .

    $default  reduce using rule 10 (decl)


state 36

   39 atribuicoes: atribuicao_simples .

    $default  reduce using rule 39 (atribuicoes)


state 37

   40 atribuicoes: atribuicao_unaria .

    $default  reduce using rule 40 (atribuicoes)


state 38

   41 atribuicoes: atribuicao_composta .

    $default  reduce using rule 41 (atribuicoes)


state 39

   42 atribuicoes: atribuicao_paralela .

    $default  reduce using rule 42 (atribuicoes)


state 40

   45 atribuicao_unaria: operador_unario . ID

    ID  shift, and go to state 53


state 41

    8 decl: type vars .
    9     | type vars . decl
   47 atribuicao_paralela: vars . ATRIBUICAO expressoes_list

    ATRIBUICAO  shift, and go to state 54
    CARACTERE   shift, and go to state 16
    STRING      shift, and go to state 17
    INTEIRO     shift, and go to state 18
    FLOAT       shift, and go to state 19
    DOUBLE      shift, and go to state 20
    VOID        shift, and go to state 21
    BOOLEANO    shift, and go to state 22

    $default  reduce using rule 8 (decl)

    decl  go to state 55
    type  go to state 25


state 42

    7 decl: type id .
   43 atribuicao_simples: id . ATRIBUICAO expressoes
   44 atribuicao_unaria: id . operador_unario
   46 atribuicao_composta: id . operador_composto valor

    INCREMENTO           shift, and go to state 31
    DECREMENTO           shift, and go to state 32
    ATRIBUICAO           shift, and go to state 56
    MAIS_IGUAL           shift, and go to state 57
    MENOS_IGUAL          shift, and go to state 58
    VEZES_IGUAL          shift, and go to state 59
    DIV_IGUAL            shift, and go to state 60
    EXPONENCIACAO_IGUAL  shift, and go to state 61

    $default  reduce using rule 7 (decl)

    operador_unario    go to state 62
    operador_composto  go to state 63


state 43

   87 args: type ID .
   88     | type ID . COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args
   89     | type ID . VIRGULA args

    COLCHETE_ESQUERDA  shift, and go to state 64
    VIRGULA            shift, and go to state 65

    $default  reduce using rule 87 (args)


state 44

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA . RETURN type IS TBEGIN stmts END ID

    RETURN  shift, and go to state 66


state 45

   25 decl_list: decl PONTO_E_VIRGULA decl_list .

    $default  reduce using rule 25 (decl_list)


state 46

   80 vetorial: CHAVE_ESQUERDA . lista_de_digitos CHAVE_DIREITA

    DIGITO  shift, and go to state 67

    lista_de_digitos  go to state 68


state 47

   91 id: ID .
   93   | ID . COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA

    COLCHETE_ESQUERDA  shift, and go to state 51

    $default  reduce using rule 91 (id)


state 48

   94 id: PARENTESE_ESQUERDA expressoes . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 69


state 49

   79 expressoes: vetorial .

    $default  reduce using rule 79 (expressoes)


state 50

   76 expressoes: id .
   77           | id . operador id
   78           | id . operador_comp id

    MODULO            shift, and go to state 70
    BARRA             shift, and go to state 71
    MAIS              shift, and go to state 72
    MENOS_UNARIO      shift, and go to state 73
    EXPONENCIACAO     shift, and go to state 74
    MENOR_QUE         shift, and go to state 75
    MAIOR_QUE         shift, and go to state 76
    MENOR_OU_IGUAL_A  shift, and go to state 77
    MAIOR_OU_IGUAL_A  shift, and go to state 78
    IGUAL_A           shift, and go to state 79
    DIFERENTE_DE      shift, and go to state 80

    $default  reduce using rule 76 (expressoes)

    operador       go to state 81
    operador_comp  go to state 82


state 51

   93 id: ID COLCHETE_ESQUERDA . expressoes COLCHETE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    expressoes  go to state 83
    vetorial    go to state 49
    id          go to state 50


state 52

   84 vars: ID VIRGULA . ID
   85     | ID VIRGULA . vars

    ID  shift, and go to state 84

    vars  go to state 85


state 53

   45 atribuicao_unaria: operador_unario ID .

    $default  reduce using rule 45 (atribuicao_unaria)


state 54

   47 atribuicao_paralela: vars ATRIBUICAO . expressoes_list

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    expressoes       go to state 86
    vetorial         go to state 49
    expressoes_list  go to state 87
    id               go to state 50


state 55

    9 decl: type vars decl .

    $default  reduce using rule 9 (decl)


state 56

   43 atribuicao_simples: id ATRIBUICAO . expressoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    expressoes  go to state 88
    vetorial    go to state 49
    id          go to state 50


state 57

   61 operador_composto: MAIS_IGUAL .

    $default  reduce using rule 61 (operador_composto)


state 58

   62 operador_composto: MENOS_IGUAL .

    $default  reduce using rule 62 (operador_composto)


state 59

   63 operador_composto: VEZES_IGUAL .

    $default  reduce using rule 63 (operador_composto)


state 60

   64 operador_composto: DIV_IGUAL .

    $default  reduce using rule 64 (operador_composto)


state 61

   65 operador_composto: EXPONENCIACAO_IGUAL .

    $default  reduce using rule 65 (operador_composto)


state 62

   44 atribuicao_unaria: id operador_unario .

    $default  reduce using rule 44 (atribuicao_unaria)


state 63

   46 atribuicao_composta: id operador_composto . valor

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    valor       go to state 89
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 64

   88 args: type ID COLCHETE_ESQUERDA . COLCHETE_DIREITA VIRGULA args

    COLCHETE_DIREITA  shift, and go to state 91


state 65

   89 args: type ID VIRGULA . args

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 86 (args)

    type  go to state 26
    args  go to state 92


state 66

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN . type IS TBEGIN stmts END ID

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    type  go to state 93


state 67

   81 lista_de_digitos: DIGITO .
   82                 | DIGITO . VIRGULA lista_de_digitos

    VIRGULA  shift, and go to state 94

    $default  reduce using rule 81 (lista_de_digitos)


state 68

   80 vetorial: CHAVE_ESQUERDA lista_de_digitos . CHAVE_DIREITA

    CHAVE_DIREITA  shift, and go to state 95


state 69

   94 id: PARENTESE_ESQUERDA expressoes PARENTESE_DIREITA .

    $default  reduce using rule 94 (id)


state 70

   54 operador: MODULO .

    $default  reduce using rule 54 (operador)


state 71

   53 operador: BARRA .

    $default  reduce using rule 53 (operador)


state 72

   50 operador: MAIS .

    $default  reduce using rule 50 (operador)


state 73

   51 operador: MENOS_UNARIO .

    $default  reduce using rule 51 (operador)


state 74

   52 operador: EXPONENCIACAO .

    $default  reduce using rule 52 (operador)


state 75

   55 operador_comp: MENOR_QUE .

    $default  reduce using rule 55 (operador_comp)


state 76

   56 operador_comp: MAIOR_QUE .

    $default  reduce using rule 56 (operador_comp)


state 77

   57 operador_comp: MENOR_OU_IGUAL_A .

    $default  reduce using rule 57 (operador_comp)


state 78

   58 operador_comp: MAIOR_OU_IGUAL_A .

    $default  reduce using rule 58 (operador_comp)


state 79

   59 operador_comp: IGUAL_A .

    $default  reduce using rule 59 (operador_comp)


state 80

   60 operador_comp: DIFERENTE_DE .

    $default  reduce using rule 60 (operador_comp)


state 81

   77 expressoes: id operador . id

    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    id  go to state 96


state 82

   78 expressoes: id operador_comp . id

    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    id  go to state 97


state 83

   93 id: ID COLCHETE_ESQUERDA expressoes . COLCHETE_DIREITA

    COLCHETE_DIREITA  shift, and go to state 98


state 84

   84 vars: ID . VIRGULA ID
   84     | ID VIRGULA ID .
   85     | ID . VIRGULA vars

    VIRGULA  shift, and go to state 52

    $default  reduce using rule 84 (vars)


state 85

   85 vars: ID VIRGULA vars .

    $default  reduce using rule 85 (vars)


state 86

   83 expressoes_list: expressoes . VIRGULA expressoes

    VIRGULA  shift, and go to state 99


state 87

   47 atribuicao_paralela: vars ATRIBUICAO expressoes_list .

    $default  reduce using rule 47 (atribuicao_paralela)


state 88

   43 atribuicao_simples: id ATRIBUICAO expressoes .

    $default  reduce using rule 43 (atribuicao_simples)


state 89

   46 atribuicao_composta: id operador_composto valor .

    $default  reduce using rule 46 (atribuicao_composta)


state 90

   73 valor: expressoes . E_LOGICO expressoes
   74      | expressoes .

    E_LOGICO  shift, and go to state 100

    $default  reduce using rule 74 (valor)


state 91

   88 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA . VIRGULA args

    VIRGULA  shift, and go to state 101


state 92

   89 args: type ID VIRGULA args .

    $default  reduce using rule 89 (args)


state 93

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type . IS TBEGIN stmts END ID

    IS  shift, and go to state 102


state 94

   82 lista_de_digitos: DIGITO VIRGULA . lista_de_digitos

    DIGITO  shift, and go to state 67

    lista_de_digitos  go to state 103


state 95

   80 vetorial: CHAVE_ESQUERDA lista_de_digitos CHAVE_DIREITA .

    $default  reduce using rule 80 (vetorial)


state 96

   77 expressoes: id operador id .

    $default  reduce using rule 77 (expressoes)


state 97

   78 expressoes: id operador_comp id .

    $default  reduce using rule 78 (expressoes)


state 98

   93 id: ID COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA .

    $default  reduce using rule 93 (id)


state 99

   83 expressoes_list: expressoes VIRGULA . expressoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    expressoes  go to state 104
    vetorial    go to state 49
    id          go to state 50


state 100

   73 valor: expressoes E_LOGICO . expressoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    expressoes  go to state 105
    vetorial    go to state 49
    id          go to state 50


state 101

   88 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA . args

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    $default  reduce using rule 86 (args)

    type  go to state 26
    args  go to state 106


state 102

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS . TBEGIN stmts END ID

    TBEGIN  shift, and go to state 107


state 103

   82 lista_de_digitos: DIGITO VIRGULA lista_de_digitos .

    $default  reduce using rule 82 (lista_de_digitos)


state 104

   83 expressoes_list: expressoes VIRGULA expressoes .

    $default  reduce using rule 83 (expressoes_list)


state 105

   73 valor: expressoes E_LOGICO expressoes .

    $default  reduce using rule 73 (valor)


state 106

   88 args: type ID COLCHETE_ESQUERDA COLCHETE_DIREITA VIRGULA args .

    $default  reduce using rule 88 (args)


state 107

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN . stmts END ID

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 113
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 108

   27 for_stmt: FOR . PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    PARENTESE_ESQUERDA  shift, and go to state 124


state 109

   26 while_stmt: WHILE . PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 125


state 110

   33 switch_stmt: SWITCH . PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default END_SWITCH

    PARENTESE_ESQUERDA  shift, and go to state 126


state 111

   28 if_stmt: IF . PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 127


state 112

   21 invoca_procedimento: ID . PARENTESE_ESQUERDA parametros PARENTESE_DIREITA
   84 vars: ID . VIRGULA ID
   85     | ID . VIRGULA vars
   91 id: ID .
   93   | ID . COLCHETE_ESQUERDA expressoes COLCHETE_DIREITA

    PARENTESE_ESQUERDA  shift, and go to state 128
    COLCHETE_ESQUERDA   shift, and go to state 51
    VIRGULA             shift, and go to state 52

    $default  reduce using rule 91 (id)


state 113

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts . END ID

    END  shift, and go to state 129


state 114

   14 stmt: decl . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 130


state 115

    5 stmts: stmt .
    6      | stmt . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    $default  reduce using rule 5 (stmts)

    stmts                go to state 131
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 116

   19 stmt: invoca_procedimento . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 132


state 117

   16 stmt: while_stmt .

    $default  reduce using rule 16 (stmt)


state 118

   17 stmt: for_stmt .

    $default  reduce using rule 17 (stmt)


state 119

   15 stmt: if_stmt .

    $default  reduce using rule 15 (stmt)


state 120

   20 stmt: switch_stmt .

    $default  reduce using rule 20 (stmt)


state 121

   18 stmt: atribuicoes . PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 133


state 122

   47 atribuicao_paralela: vars . ATRIBUICAO expressoes_list

    ATRIBUICAO  shift, and go to state 54


state 123

   43 atribuicao_simples: id . ATRIBUICAO expressoes
   44 atribuicao_unaria: id . operador_unario
   46 atribuicao_composta: id . operador_composto valor

    INCREMENTO           shift, and go to state 31
    DECREMENTO           shift, and go to state 32
    ATRIBUICAO           shift, and go to state 56
    MAIS_IGUAL           shift, and go to state 57
    MENOS_IGUAL          shift, and go to state 58
    VEZES_IGUAL          shift, and go to state 59
    DIV_IGUAL            shift, and go to state 60
    EXPONENCIACAO_IGUAL  shift, and go to state 61

    operador_unario    go to state 62
    operador_composto  go to state 63


state 124

   27 for_stmt: FOR PARENTESE_ESQUERDA . decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    CARACTERE  shift, and go to state 16
    STRING     shift, and go to state 17
    INTEIRO    shift, and go to state 18
    FLOAT      shift, and go to state 19
    DOUBLE     shift, and go to state 20
    VOID       shift, and go to state 21
    BOOLEANO   shift, and go to state 22

    decl  go to state 134
    type  go to state 25


state 125

   26 while_stmt: WHILE PARENTESE_ESQUERDA . valor PARENTESE_DIREITA stmts END_WHILE

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    valor       go to state 135
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 126

   33 switch_stmt: SWITCH PARENTESE_ESQUERDA . valor PARENTESE_DIREITA case_stmt default END_SWITCH

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    valor       go to state 136
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 127

   28 if_stmt: IF PARENTESE_ESQUERDA . valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    valor       go to state 137
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 128

   21 invoca_procedimento: ID PARENTESE_ESQUERDA . parametros PARENTESE_DIREITA

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    parametros  go to state 138
    expressoes  go to state 139
    vetorial    go to state 49
    id          go to state 50


state 129

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END . ID

    ID  shift, and go to state 140


state 130

   14 stmt: decl PONTO_E_VIRGULA .

    $default  reduce using rule 14 (stmt)


state 131

    6 stmts: stmt stmts .

    $default  reduce using rule 6 (stmts)


state 132

   19 stmt: invoca_procedimento PONTO_E_VIRGULA .

    $default  reduce using rule 19 (stmt)


state 133

   18 stmt: atribuicoes PONTO_E_VIRGULA .

    $default  reduce using rule 18 (stmt)


state 134

   27 for_stmt: FOR PARENTESE_ESQUERDA decl . PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    PONTO_E_VIRGULA  shift, and go to state 141


state 135

   26 while_stmt: WHILE PARENTESE_ESQUERDA valor . PARENTESE_DIREITA stmts END_WHILE

    PARENTESE_DIREITA  shift, and go to state 142


state 136

   33 switch_stmt: SWITCH PARENTESE_ESQUERDA valor . PARENTESE_DIREITA case_stmt default END_SWITCH

    PARENTESE_DIREITA  shift, and go to state 143


state 137

   28 if_stmt: IF PARENTESE_ESQUERDA valor . PARENTESE_DIREITA THEN stmts elses_opcoes END_IF

    PARENTESE_DIREITA  shift, and go to state 144


state 138

   21 invoca_procedimento: ID PARENTESE_ESQUERDA parametros . PARENTESE_DIREITA

    PARENTESE_DIREITA  shift, and go to state 145


state 139

   22 parametros: expressoes .
   23           | expressoes . VIRGULA parametros

    VIRGULA  shift, and go to state 146

    $default  reduce using rule 22 (parametros)


state 140

   90 funcao: FUNCAO ID PARENTESE_ESQUERDA args PARENTESE_DIREITA RETURN type IS TBEGIN stmts END ID .

    $default  reduce using rule 90 (funcao)


state 141

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA . valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    valor       go to state 147
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 142

   26 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA . stmts END_WHILE

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 148
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 143

   33 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA . case_stmt default END_SWITCH

    CASE  shift, and go to state 149

    case_stmt  go to state 150
    case       go to state 151


state 144

   28 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA . THEN stmts elses_opcoes END_IF

    THEN  shift, and go to state 152


state 145

   21 invoca_procedimento: ID PARENTESE_ESQUERDA parametros PARENTESE_DIREITA .

    $default  reduce using rule 21 (invoca_procedimento)


state 146

   23 parametros: expressoes VIRGULA . parametros

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    parametros  go to state 153
    expressoes  go to state 139
    vetorial    go to state 49
    id          go to state 50


state 147

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor . PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR

    PONTO_E_VIRGULA  shift, and go to state 154


state 148

   26 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts . END_WHILE

    END_WHILE  shift, and go to state 155


state 149

   38 case: CASE . PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS stmts

    PARENTESE_ESQUERDA  shift, and go to state 156


state 150

   33 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt . default END_SWITCH

    DEFAULT  shift, and go to state 157

    $default  reduce using rule 34 (default)

    default  go to state 158


state 151

   36 case_stmt: case .
   37          | case . case_stmt

    CASE  shift, and go to state 149

    $default  reduce using rule 36 (case_stmt)

    case_stmt  go to state 159
    case       go to state 151


state 152

   28 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN . stmts elses_opcoes END_IF

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 160
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 153

   23 parametros: expressoes VIRGULA parametros .

    $default  reduce using rule 23 (parametros)


state 154

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA . atribuicoes PARENTESE_DIREITA stmts END_FOR

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 34

    atribuicoes          go to state 161
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    vars                 go to state 122
    id                   go to state 123


state 155

   26 while_stmt: WHILE PARENTESE_ESQUERDA valor PARENTESE_DIREITA stmts END_WHILE .

    $default  reduce using rule 26 (while_stmt)


state 156

   38 case: CASE PARENTESE_ESQUERDA . id PARENTESE_DIREITA DOIS_PONTOS stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    id  go to state 162


state 157

   35 default: DEFAULT . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 163
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 158

   33 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default . END_SWITCH

    END_SWITCH  shift, and go to state 164


state 159

   37 case_stmt: case case_stmt .

    $default  reduce using rule 37 (case_stmt)


state 160

   28 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts . elses_opcoes END_IF

    ELSE  shift, and go to state 165

    $default  reduce using rule 30 (elses_opcoes)

    elses_opcoes  go to state 166


state 161

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes . PARENTESE_DIREITA stmts END_FOR

    PARENTESE_DIREITA  shift, and go to state 167


state 162

   38 case: CASE PARENTESE_ESQUERDA id . PARENTESE_DIREITA DOIS_PONTOS stmts

    PARENTESE_DIREITA  shift, and go to state 168


state 163

   35 default: DEFAULT stmts .

    $default  reduce using rule 35 (default)


state 164

   33 switch_stmt: SWITCH PARENTESE_ESQUERDA valor PARENTESE_DIREITA case_stmt default END_SWITCH .

    $default  reduce using rule 33 (switch_stmt)


state 165

   31 elses_opcoes: ELSE . THEN stmts
   32             | ELSE . if_stmt_in_else

    IF    shift, and go to state 169
    THEN  shift, and go to state 170

    if_stmt_in_else  go to state 171


state 166

   28 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes . END_IF

    END_IF  shift, and go to state 172


state 167

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA . stmts END_FOR

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 173
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 168

   38 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA . DOIS_PONTOS stmts

    DOIS_PONTOS  shift, and go to state 174


state 169

   29 if_stmt_in_else: IF . PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes

    PARENTESE_ESQUERDA  shift, and go to state 175


state 170

   31 elses_opcoes: ELSE THEN . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 176
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 171

   32 elses_opcoes: ELSE if_stmt_in_else .

    $default  reduce using rule 32 (elses_opcoes)


state 172

   28 if_stmt: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes END_IF .

    $default  reduce using rule 28 (if_stmt)


state 173

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts . END_FOR

    END_FOR  shift, and go to state 177


state 174

   38 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS . stmts

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 178
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 175

   29 if_stmt_in_else: IF PARENTESE_ESQUERDA . valor PARENTESE_DIREITA THEN stmts elses_opcoes

    CHAVE_ESQUERDA      shift, and go to state 46
    PARENTESE_ESQUERDA  shift, and go to state 30
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 47

    $default  reduce using rule 75 (expressoes)

    valor       go to state 179
    expressoes  go to state 90
    vetorial    go to state 49
    id          go to state 50


state 176

   31 elses_opcoes: ELSE THEN stmts .

    $default  reduce using rule 31 (elses_opcoes)


state 177

   27 for_stmt: FOR PARENTESE_ESQUERDA decl PONTO_E_VIRGULA valor PONTO_E_VIRGULA atribuicoes PARENTESE_DIREITA stmts END_FOR .

    $default  reduce using rule 27 (for_stmt)


state 178

   38 case: CASE PARENTESE_ESQUERDA id PARENTESE_DIREITA DOIS_PONTOS stmts .

    $default  reduce using rule 38 (case)


state 179

   29 if_stmt_in_else: IF PARENTESE_ESQUERDA valor . PARENTESE_DIREITA THEN stmts elses_opcoes

    PARENTESE_DIREITA  shift, and go to state 180


state 180

   29 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA . THEN stmts elses_opcoes

    THEN  shift, and go to state 181


state 181

   29 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN . stmts elses_opcoes

    PARENTESE_ESQUERDA  shift, and go to state 30
    INCREMENTO          shift, and go to state 31
    DECREMENTO          shift, and go to state 32
    FOR                 shift, and go to state 108
    WHILE               shift, and go to state 109
    SWITCH              shift, and go to state 110
    IF                  shift, and go to state 111
    CARACTERE           shift, and go to state 16
    STRING              shift, and go to state 17
    INTEIRO             shift, and go to state 18
    FLOAT               shift, and go to state 19
    DOUBLE              shift, and go to state 20
    VOID                shift, and go to state 21
    BOOLEANO            shift, and go to state 22
    DIGITO              shift, and go to state 33
    ID                  shift, and go to state 112

    stmts                go to state 182
    decl                 go to state 114
    stmt                 go to state 115
    invoca_procedimento  go to state 116
    while_stmt           go to state 117
    for_stmt             go to state 118
    if_stmt              go to state 119
    switch_stmt          go to state 120
    atribuicoes          go to state 121
    atribuicao_simples   go to state 36
    atribuicao_unaria    go to state 37
    atribuicao_composta  go to state 38
    atribuicao_paralela  go to state 39
    operador_unario      go to state 40
    type                 go to state 25
    vars                 go to state 122
    id                   go to state 123


state 182

   29 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts . elses_opcoes

    ELSE  shift, and go to state 165

    $default  reduce using rule 30 (elses_opcoes)

    elses_opcoes  go to state 183


state 183

   29 if_stmt_in_else: IF PARENTESE_ESQUERDA valor PARENTESE_DIREITA THEN stmts elses_opcoes .

    $default  reduce using rule 29 (if_stmt_in_else)
